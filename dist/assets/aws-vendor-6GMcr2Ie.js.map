{"version":3,"file":"aws-vendor-6GMcr2Ie.js","sources":["../../node_modules/@aws-amplify/core/dist/esm/constants.mjs","../../node_modules/@aws-amplify/core/dist/esm/Logger/types.mjs","../../node_modules/@aws-amplify/core/dist/esm/Logger/ConsoleLogger.mjs","../../node_modules/@aws-amplify/core/dist/esm/errors/AmplifyError.mjs","../../node_modules/@aws-amplify/core/dist/esm/types/errors.mjs","../../node_modules/@aws-amplify/core/dist/esm/errors/createAssertionFunction.mjs","../../node_modules/@aws-amplify/core/dist/esm/Hub/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/globalHelpers/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/base64Decoder.mjs","../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/utils/errorHelpers.mjs","../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/utils/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/deepFreeze.mjs","../../node_modules/@aws-amplify/core/dist/esm/parseAWSExports.mjs","../../node_modules/@aws-amplify/core/dist/esm/singleton/constants.mjs","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../node_modules/@aws-amplify/core/dist/esm/parseAmplifyOutputs.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/parseAmplifyConfig.mjs","../../node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","../../node_modules/@aws-crypto/util/build/module/convertToBuffer.js","../../node_modules/@smithy/util-hex-encoding/dist-es/index.js","../../node_modules/@aws-amplify/core/dist/esm/Platform/types.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/version.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/helpers.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/React.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Vue.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Svelte.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Next.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Nuxt.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Angular.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/ReactNative.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Expo.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Web.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/detectFramework.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/customUserAgent.mjs","../../node_modules/@aws-amplify/core/dist/esm/Platform/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/isBrowser.mjs","../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/singleton/Amplify.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/serde/responseInfo.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/serde/json.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/internal/composeServiceApi.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/retry/constants.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/retry/jitteredBackoff.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/constants.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/jitteredBackoff.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/isClockSkewError.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/defaultRetryDecider.mjs","../../node_modules/@aws-amplify/core/dist/esm/foundation/factories/serviceClients/cognitoIdentity/constants.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/retryMiddleware.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/amplifyUuid/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/amzSdkInvocationIdHeaderMiddleware.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/amzSdkRequestHeaderMiddleware.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/userAgent/middleware.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/internal/composeTransferHandler.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/utils/memoization.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/handlers/fetch.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/handlers/aws/unauthenticated.mjs","../../node_modules/@aws-amplify/core/dist/esm/foundation/factories/middleware/createDisableCacheMiddleware.mjs","../../node_modules/@aws-amplify/core/dist/esm/foundation/factories/serviceClients/cognitoIdentity/handler/cognitoIdentityTransferHandler.mjs","../../node_modules/@aws-amplify/core/dist/esm/foundation/factories/serviceClients/cognitoIdentity/serde/createClientSerializer.mjs","../../node_modules/@aws-amplify/core/dist/esm/foundation/factories/serviceClients/cognitoIdentity/createGetCredentialsForIdentityClient.mjs","../../node_modules/@aws-amplify/core/dist/esm/foundation/factories/serviceClients/cognitoIdentity/createGetIdClient.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/endpoints/partitions.mjs","../../node_modules/@aws-amplify/core/dist/esm/clients/endpoints/getDnsSuffix.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/amplifyUrl/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/foundation/factories/serviceClients/cognitoIdentity/cognitoIdentityPoolEndpointResolver.mjs","../../node_modules/@aws-amplify/core/dist/esm/errors/PlatformNotSupportedError.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/KeyValueStorage.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/InMemoryStorage.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/utils.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/DefaultStorage.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/SessionStorage.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/SyncKeyValueStorage.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/SyncSessionStorage.mjs","../../node_modules/js-cookie/dist/js.cookie.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/CookieStorage.mjs","../../node_modules/@aws-amplify/core/dist/esm/storage/index.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/deDupeAsyncFunction.mjs","../../node_modules/@aws-amplify/core/dist/esm/utils/isTokenExpired.mjs","../../node_modules/@aws-amplify/auth/dist/esm/errors/AuthError.mjs","../../node_modules/@aws-amplify/auth/dist/esm/foundation/parsers/regionParsers.mjs","../../node_modules/@aws-amplify/auth/dist/esm/errors/constants.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/types.mjs","../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolSerializer.mjs","../../node_modules/@aws-amplify/auth/dist/esm/errors/utils/assertServiceError.mjs","../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/serde/createUserPoolDeserializer.mjs","../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs","../../node_modules/@aws-amplify/auth/dist/esm/foundation/constants.mjs","../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs","../../node_modules/@aws-amplify/auth/dist/esm/foundation/cognitoUserPoolEndpointResolver.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs","../../node_modules/@aws-amplify/auth/dist/esm/foundation/factories/serviceClients/cognitoIdentityProvider/createGetTokensFromRefreshTokenClient.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/refreshAuthTokens.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/types.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/errorHelpers.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/constants.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/TokenStore.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/signInWithRedirectStore.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/oAuthStore.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/TokenOrchestrator.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/tokenProvider.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/types.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/IdentityIdStore.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/factories/createCognitoIdentityPoolEndpointResolver.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/utils.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/IdentityIdProvider.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/credentialsProvider.mjs","../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/index.mjs","../../node_modules/aws-amplify/dist/esm/initSingleton.mjs"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Logging constants\nconst AWS_CLOUDWATCH_CATEGORY = 'Logging';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n// Error exception code constants\nconst NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\n\nexport { AWS_CLOUDWATCH_CATEGORY, NO_HUBCALLBACK_PROVIDED_EXCEPTION, USER_AGENT_HEADER };\n//# sourceMappingURL=constants.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar LogType;\n(function (LogType) {\n    LogType[\"DEBUG\"] = \"DEBUG\";\n    LogType[\"ERROR\"] = \"ERROR\";\n    LogType[\"INFO\"] = \"INFO\";\n    LogType[\"WARN\"] = \"WARN\";\n    LogType[\"VERBOSE\"] = \"VERBOSE\";\n    LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\n\nexport { LogType };\n//# sourceMappingURL=types.mjs.map\n","import { AWS_CLOUDWATCH_CATEGORY } from '../constants.mjs';\nimport { LogType } from './types.mjs';\n\n/* eslint-disable no-console */\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nclass ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n            if (type === LogType.INFO && console.info) {\n                log = console.info.bind(console);\n            }\n            if (type === LogType.DEBUG && console.debug) {\n                log = console.debug.bind(console);\n            }\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\n\nexport { ConsoleLogger };\n//# sourceMappingURL=ConsoleLogger.mjs.map\n","class AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, metadata, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        if (metadata) {\n            // If metadata exists, explicitly only record the following properties.\n            const { extendedRequestId, httpStatusCode, requestId } = metadata;\n            this.metadata = { extendedRequestId, httpStatusCode, requestId };\n        }\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n\nexport { AmplifyError };\n//# sourceMappingURL=AmplifyError.mjs.map\n","var AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n    AmplifyErrorCode[\"NetworkError\"] = \"NetworkError\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n\nexport { AmplifyErrorCode };\n//# sourceMappingURL=errors.mjs.map\n","import { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n    const { message, recoverySuggestion } = errorMap[name];\n    if (!assertion) {\n        throw new AssertionError({\n            name,\n            message: additionalContext\n                ? `${message} ${additionalContext}`\n                : message,\n            recoverySuggestion,\n        });\n    }\n};\n\nexport { createAssertionFunction };\n//# sourceMappingURL=createAssertionFunction.mjs.map\n","import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants.mjs';\nimport { AmplifyError } from '../errors/AmplifyError.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nclass HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nconst Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nconst HubInternal = new HubClass('internal-hub');\n\nexport { AMPLIFY_SYMBOL, Hub, HubClass, HubInternal };\n//# sourceMappingURL=index.mjs.map\n","import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCrypto = () => {\n    if (typeof window === 'object' && typeof window.crypto === 'object') {\n        return window.crypto;\n    }\n    // Next.js global polyfill\n    if (typeof crypto === 'object') {\n        return crypto;\n    }\n    throw new AmplifyError({\n        name: 'MissingPolyfill',\n        message: 'Cannot resolve the `crypto` function from the environment.',\n    });\n};\nconst getBtoa = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n        return window.btoa;\n    }\n    // Next.js global polyfill\n    if (typeof btoa === 'function') {\n        return btoa;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `btoa` function from the environment.',\n    });\n};\nconst getAtob = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob;\n    }\n    // Next.js global polyfill\n    if (typeof atob === 'function') {\n        return atob;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `atob` function from the environment.',\n    });\n};\n\nexport { getAtob, getBtoa, getCrypto };\n//# sourceMappingURL=index.mjs.map\n","import { getAtob } from '../../globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Decoder = {\n    convert(input, options) {\n        let inputStr = input;\n        // urlSafe character replacement options conform to the base64 url spec\n        // https://datatracker.ietf.org/doc/html/rfc4648#page-7\n        if (options?.urlSafe) {\n            inputStr = inputStr.replace(/-/g, '+').replace(/_/g, '/');\n        }\n        return getAtob()(inputStr);\n    },\n};\n\nexport { base64Decoder };\n//# sourceMappingURL=base64Decoder.mjs.map\n","import { createAssertionFunction } from '../../../errors/createAssertionFunction.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n        message: 'Auth Token Provider not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n        message: 'Auth UserPool or IdentityPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n        message: 'Auth UserPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n    },\n    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n        message: 'Invalid identity pool id provided.',\n        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n    },\n    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n        message: 'oauth param not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n    },\n};\nconst assert = createAssertionFunction(authConfigurationErrorMap);\n\nexport { AuthConfigurationErrorCode, assert };\n//# sourceMappingURL=errorHelpers.mjs.map\n","import { base64Decoder } from '../../../utils/convert/base64/base64Decoder.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport { assert, AuthConfigurationErrorCode } from './errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertTokenProviderConfig(cognitoConfig) {\n    let assertionValid = true; // assume valid until otherwise proveed\n    if (!cognitoConfig) {\n        assertionValid = false;\n    }\n    else {\n        assertionValid =\n            !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n    }\n    assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n}\nfunction assertOAuthConfig(cognitoConfig) {\n    const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignOut &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignIn &&\n        !!cognitoConfig?.loginWith?.oauth?.responseType;\n    assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n}\nfunction assertIdentityPoolIdConfig(cognitoConfig) {\n    const validConfig = !!cognitoConfig?.identityPoolId;\n    assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n}\n/**\n * Decodes payload of JWT token\n *\n * @param {String} token A string representing a token to be decoded\n * @throws {@link Error} - Throws error when token is invalid or payload malformed.\n */\nfunction decodeJWT(token) {\n    const tokenParts = token.split('.');\n    if (tokenParts.length !== 3) {\n        throw new Error('Invalid token');\n    }\n    try {\n        const base64WithUrlSafe = tokenParts[1];\n        const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonStr = decodeURIComponent(base64Decoder\n            .convert(base64)\n            .split('')\n            .map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`)\n            .join(''));\n        const payload = JSON.parse(jsonStr);\n        return {\n            toString: () => token,\n            payload,\n        };\n    }\n    catch (err) {\n        throw new Error('Invalid token payload');\n    }\n}\n\nexport { assertIdentityPoolIdConfig, assertOAuthConfig, assertTokenProviderConfig, decodeJWT };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst deepFreeze = (object) => {\n    const propNames = Reflect.ownKeys(object);\n    for (const name of propNames) {\n        const value = object[name];\n        if ((value && typeof value === 'object') || typeof value === 'function') {\n            deepFreeze(value);\n        }\n    }\n    return Object.freeze(object);\n};\n\nexport { deepFreeze };\n//# sourceMappingURL=deepFreeze.mjs.map\n","import { ConsoleLogger } from './Logger/ConsoleLogger.mjs';\nimport { AmplifyError } from './errors/AmplifyError.mjs';\nimport './types/errors.mjs';\nimport './errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('parseAWSExports');\nconst authTypeMapping = {\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    OPENID_CONNECT: 'oidc',\n    NONE: 'none',\n    AWS_LAMBDA: 'lambda',\n    // `LAMBDA` is an incorrect value that was added during the v6 rewrite.\n    // Keeping it as a valid value until v7 to prevent breaking customers who might\n    // be relying on it as a workaround.\n    // ref: https://github.com/aws-amplify/amplify-js/pull/12922\n    // TODO: @v7 remove next line\n    LAMBDA: 'lambda',\n};\n/**\n * Converts the object imported from `aws-exports.js` or `amplifyconfiguration.json` files generated by\n * the Amplify CLI into an object that conforms to the {@link ResourcesConfig}.\n *\n * @param config A configuration object imported  from `aws-exports.js` or `amplifyconfiguration.json`.\n *\n * @returns An object that conforms to the {@link ResourcesConfig} .\n */\nconst parseAWSExports = (config = {}) => {\n    if (!Object.prototype.hasOwnProperty.call(config, 'aws_project_region')) {\n        throw new AmplifyError({\n            name: 'InvalidParameterException',\n            message: 'Invalid config parameter.',\n            recoverySuggestion: 'Ensure passing the config object imported from  `amplifyconfiguration.json`.',\n        });\n    }\n    const { aws_appsync_apiKey, aws_appsync_authenticationType, aws_appsync_graphqlEndpoint, aws_appsync_region, aws_bots_config, aws_cognito_identity_pool_id, aws_cognito_sign_up_verification_method, aws_cognito_mfa_configuration, aws_cognito_mfa_types, aws_cognito_password_protection_settings, aws_cognito_verification_mechanisms, aws_cognito_signup_attributes, aws_cognito_social_providers, aws_cognito_username_attributes, aws_mandatory_sign_in, aws_mobile_analytics_app_id, aws_mobile_analytics_app_region, aws_user_files_s3_bucket, aws_user_files_s3_bucket_region, aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing, aws_user_pools_id, aws_user_pools_web_client_id, geo, oauth, predictions, aws_cloud_logic_custom, Notifications, modelIntrospection, } = config;\n    const amplifyConfig = {};\n    // Analytics\n    if (aws_mobile_analytics_app_id) {\n        amplifyConfig.Analytics = {\n            Pinpoint: {\n                appId: aws_mobile_analytics_app_id,\n                region: aws_mobile_analytics_app_region,\n            },\n        };\n    }\n    // Notifications\n    const { InAppMessaging, Push } = Notifications ?? {};\n    if (InAppMessaging?.AWSPinpoint || Push?.AWSPinpoint) {\n        if (InAppMessaging?.AWSPinpoint) {\n            const { appId, region } = InAppMessaging.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                InAppMessaging: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n        if (Push?.AWSPinpoint) {\n            const { appId, region } = Push.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                ...amplifyConfig.Notifications,\n                PushNotification: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n    }\n    // Interactions\n    if (Array.isArray(aws_bots_config)) {\n        amplifyConfig.Interactions = {\n            LexV1: Object.fromEntries(aws_bots_config.map(bot => [bot.name, bot])),\n        };\n    }\n    // API\n    if (aws_appsync_graphqlEndpoint) {\n        const defaultAuthMode = authTypeMapping[aws_appsync_authenticationType];\n        if (!defaultAuthMode) {\n            logger.debug(`Invalid authentication type ${aws_appsync_authenticationType}. Falling back to IAM.`);\n        }\n        amplifyConfig.API = {\n            GraphQL: {\n                endpoint: aws_appsync_graphqlEndpoint,\n                apiKey: aws_appsync_apiKey,\n                region: aws_appsync_region,\n                defaultAuthMode: defaultAuthMode ?? 'iam',\n            },\n        };\n        if (modelIntrospection) {\n            amplifyConfig.API.GraphQL.modelIntrospection = modelIntrospection;\n        }\n    }\n    // Auth\n    const mfaConfig = aws_cognito_mfa_configuration\n        ? {\n            status: aws_cognito_mfa_configuration &&\n                aws_cognito_mfa_configuration.toLowerCase(),\n            totpEnabled: aws_cognito_mfa_types?.includes('TOTP') ?? false,\n            smsEnabled: aws_cognito_mfa_types?.includes('SMS') ?? false,\n        }\n        : undefined;\n    const passwordFormatConfig = aws_cognito_password_protection_settings\n        ? {\n            minLength: aws_cognito_password_protection_settings.passwordPolicyMinLength,\n            requireLowercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_LOWERCASE') ?? false,\n            requireUppercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_UPPERCASE') ?? false,\n            requireNumbers: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_NUMBERS') ?? false,\n            requireSpecialCharacters: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_SYMBOLS') ?? false,\n        }\n        : undefined;\n    const mergedUserAttributes = Array.from(new Set([\n        ...(aws_cognito_verification_mechanisms ?? []),\n        ...(aws_cognito_signup_attributes ?? []),\n    ]));\n    const userAttributes = mergedUserAttributes.reduce((attributes, key) => ({\n        ...attributes,\n        // All user attributes generated by the CLI are required\n        [key.toLowerCase()]: { required: true },\n    }), {});\n    const loginWithEmailEnabled = aws_cognito_username_attributes?.includes('EMAIL') ?? false;\n    const loginWithPhoneEnabled = aws_cognito_username_attributes?.includes('PHONE_NUMBER') ?? false;\n    if (aws_cognito_identity_pool_id || aws_user_pools_id) {\n        amplifyConfig.Auth = {\n            Cognito: {\n                identityPoolId: aws_cognito_identity_pool_id,\n                allowGuestAccess: aws_mandatory_sign_in !== 'enable',\n                signUpVerificationMethod: aws_cognito_sign_up_verification_method,\n                userAttributes,\n                userPoolClientId: aws_user_pools_web_client_id,\n                userPoolId: aws_user_pools_id,\n                mfa: mfaConfig,\n                passwordFormat: passwordFormatConfig,\n                loginWith: {\n                    username: !(loginWithEmailEnabled || loginWithPhoneEnabled),\n                    email: loginWithEmailEnabled,\n                    phone: loginWithPhoneEnabled,\n                },\n            },\n        };\n    }\n    const hasOAuthConfig = oauth ? Object.keys(oauth).length > 0 : false;\n    const hasSocialProviderConfig = aws_cognito_social_providers\n        ? aws_cognito_social_providers.length > 0\n        : false;\n    if (amplifyConfig.Auth && hasOAuthConfig) {\n        amplifyConfig.Auth.Cognito.loginWith = {\n            ...amplifyConfig.Auth.Cognito.loginWith,\n            oauth: {\n                ...getOAuthConfig(oauth),\n                ...(hasSocialProviderConfig && {\n                    providers: parseSocialProviders(aws_cognito_social_providers),\n                }),\n            },\n        };\n    }\n    // Storage\n    if (aws_user_files_s3_bucket) {\n        amplifyConfig.Storage = {\n            S3: {\n                bucket: aws_user_files_s3_bucket,\n                region: aws_user_files_s3_bucket_region,\n                dangerouslyConnectToHttpEndpointForTesting: aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing,\n            },\n        };\n    }\n    // Geo\n    if (geo) {\n        const { amazon_location_service } = geo;\n        amplifyConfig.Geo = {\n            LocationService: {\n                maps: amazon_location_service.maps,\n                geofenceCollections: amazon_location_service.geofenceCollections,\n                searchIndices: amazon_location_service.search_indices,\n                region: amazon_location_service.region,\n            },\n        };\n    }\n    // REST API\n    if (aws_cloud_logic_custom) {\n        amplifyConfig.API = {\n            ...amplifyConfig.API,\n            REST: aws_cloud_logic_custom.reduce((acc, api) => {\n                const { name, endpoint, region, service } = api;\n                return {\n                    ...acc,\n                    [name]: {\n                        endpoint,\n                        ...(service ? { service } : undefined),\n                        ...(region ? { region } : undefined),\n                    },\n                };\n            }, {}),\n        };\n    }\n    // Predictions\n    if (predictions) {\n        // map VoiceId from speechGenerator defaults to voiceId\n        const { VoiceId: voiceId } = predictions?.convert?.speechGenerator?.defaults ?? {};\n        amplifyConfig.Predictions = voiceId\n            ? {\n                ...predictions,\n                convert: {\n                    ...predictions.convert,\n                    speechGenerator: {\n                        ...predictions.convert.speechGenerator,\n                        defaults: { voiceId },\n                    },\n                },\n            }\n            : predictions;\n    }\n    return amplifyConfig;\n};\nconst getRedirectUrl = (redirectStr) => redirectStr?.split(',') ?? [];\nconst getOAuthConfig = ({ domain, scope, redirectSignIn, redirectSignOut, responseType, }) => ({\n    domain,\n    scopes: scope,\n    redirectSignIn: getRedirectUrl(redirectSignIn),\n    redirectSignOut: getRedirectUrl(redirectSignOut),\n    responseType,\n});\nconst parseSocialProviders = (aws_cognito_social_providers) => {\n    return aws_cognito_social_providers.map((provider) => {\n        const updatedProvider = provider.toLowerCase();\n        return updatedProvider.charAt(0).toUpperCase() + updatedProvider.slice(1);\n    });\n};\n\nexport { parseAWSExports };\n//# sourceMappingURL=parseAWSExports.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ADD_OAUTH_LISTENER = Symbol('oauth-listener');\n\nexport { ADD_OAUTH_LISTENER };\n//# sourceMappingURL=constants.mjs.map\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isAmplifyOutputs(config) {\n    // version format initially will be '1' but is expected to be something like x.y where x is major and y minor version\n    const { version } = config;\n    if (!version) {\n        return false;\n    }\n    return version.startsWith('1');\n}\nfunction parseStorage(amplifyOutputsStorageProperties) {\n    if (!amplifyOutputsStorageProperties) {\n        return undefined;\n    }\n    const { bucket_name, aws_region, buckets } = amplifyOutputsStorageProperties;\n    return {\n        S3: {\n            bucket: bucket_name,\n            region: aws_region,\n            buckets: buckets && createBucketInfoMap(buckets),\n        },\n    };\n}\nfunction parseAuth(amplifyOutputsAuthProperties) {\n    if (!amplifyOutputsAuthProperties) {\n        return undefined;\n    }\n    const { user_pool_id, user_pool_client_id, identity_pool_id, password_policy, mfa_configuration, mfa_methods, unauthenticated_identities_enabled, oauth, username_attributes, standard_required_attributes, groups, } = amplifyOutputsAuthProperties;\n    const authConfig = {\n        Cognito: {\n            userPoolId: user_pool_id,\n            userPoolClientId: user_pool_client_id,\n            groups,\n        },\n    };\n    if (identity_pool_id) {\n        authConfig.Cognito = {\n            ...authConfig.Cognito,\n            identityPoolId: identity_pool_id,\n        };\n    }\n    if (password_policy) {\n        authConfig.Cognito.passwordFormat = {\n            requireLowercase: password_policy.require_lowercase,\n            requireNumbers: password_policy.require_numbers,\n            requireUppercase: password_policy.require_uppercase,\n            requireSpecialCharacters: password_policy.require_symbols,\n            minLength: password_policy.min_length ?? 6,\n        };\n    }\n    if (mfa_configuration) {\n        authConfig.Cognito.mfa = {\n            status: getMfaStatus(mfa_configuration),\n            smsEnabled: mfa_methods?.includes('SMS'),\n            totpEnabled: mfa_methods?.includes('TOTP'),\n        };\n    }\n    if (unauthenticated_identities_enabled) {\n        authConfig.Cognito.allowGuestAccess = unauthenticated_identities_enabled;\n    }\n    if (oauth) {\n        authConfig.Cognito.loginWith = {\n            oauth: {\n                domain: oauth.domain,\n                redirectSignIn: oauth.redirect_sign_in_uri,\n                redirectSignOut: oauth.redirect_sign_out_uri,\n                responseType: oauth.response_type === 'token' ? 'token' : 'code',\n                scopes: oauth.scopes,\n                providers: getOAuthProviders(oauth.identity_providers),\n            },\n        };\n    }\n    if (username_attributes) {\n        authConfig.Cognito.loginWith = {\n            ...authConfig.Cognito.loginWith,\n            email: username_attributes.includes('email'),\n            phone: username_attributes.includes('phone_number'),\n            // Signing in with a username is not currently supported in Gen2, this should always evaluate to false\n            username: username_attributes.includes('username'),\n        };\n    }\n    if (standard_required_attributes) {\n        authConfig.Cognito.userAttributes = standard_required_attributes.reduce((acc, curr) => ({ ...acc, [curr]: { required: true } }), {});\n    }\n    return authConfig;\n}\nfunction parseAnalytics(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties?.amazon_pinpoint) {\n        return undefined;\n    }\n    const { amazon_pinpoint } = amplifyOutputsAnalyticsProperties;\n    return {\n        Pinpoint: {\n            appId: amazon_pinpoint.app_id,\n            region: amazon_pinpoint.aws_region,\n        },\n    };\n}\nfunction parseGeo(amplifyOutputsAnalyticsProperties) {\n    if (!amplifyOutputsAnalyticsProperties) {\n        return undefined;\n    }\n    const { aws_region, geofence_collections, maps, search_indices } = amplifyOutputsAnalyticsProperties;\n    return {\n        LocationService: {\n            region: aws_region,\n            searchIndices: search_indices,\n            geofenceCollections: geofence_collections,\n            maps,\n        },\n    };\n}\nfunction parseData(amplifyOutputsDataProperties) {\n    if (!amplifyOutputsDataProperties) {\n        return undefined;\n    }\n    const { aws_region, default_authorization_type, url, api_key, model_introspection, } = amplifyOutputsDataProperties;\n    const GraphQL = {\n        endpoint: url,\n        defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n        region: aws_region,\n        apiKey: api_key,\n        modelIntrospection: model_introspection,\n    };\n    return {\n        GraphQL,\n    };\n}\nfunction parseCustom(amplifyOutputsCustomProperties) {\n    if (!amplifyOutputsCustomProperties?.events) {\n        return undefined;\n    }\n    const { url, aws_region, api_key, default_authorization_type } = amplifyOutputsCustomProperties.events;\n    const Events = {\n        endpoint: url,\n        defaultAuthMode: getGraphQLAuthMode(default_authorization_type),\n        region: aws_region,\n        apiKey: api_key,\n    };\n    return {\n        Events,\n    };\n}\nfunction parseNotifications(amplifyOutputsNotificationsProperties) {\n    if (!amplifyOutputsNotificationsProperties) {\n        return undefined;\n    }\n    const { aws_region, channels, amazon_pinpoint_app_id } = amplifyOutputsNotificationsProperties;\n    const hasInAppMessaging = channels.includes('IN_APP_MESSAGING');\n    const hasPushNotification = channels.includes('APNS') || channels.includes('FCM');\n    if (!(hasInAppMessaging || hasPushNotification)) {\n        return undefined;\n    }\n    // At this point, we know the Amplify outputs contains at least one supported channel\n    const notificationsConfig = {};\n    if (hasInAppMessaging) {\n        notificationsConfig.InAppMessaging = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    if (hasPushNotification) {\n        notificationsConfig.PushNotification = {\n            Pinpoint: {\n                appId: amazon_pinpoint_app_id,\n                region: aws_region,\n            },\n        };\n    }\n    return notificationsConfig;\n}\nfunction parseAmplifyOutputs(amplifyOutputs) {\n    const resourcesConfig = {};\n    if (amplifyOutputs.storage) {\n        resourcesConfig.Storage = parseStorage(amplifyOutputs.storage);\n    }\n    if (amplifyOutputs.auth) {\n        resourcesConfig.Auth = parseAuth(amplifyOutputs.auth);\n    }\n    if (amplifyOutputs.analytics) {\n        resourcesConfig.Analytics = parseAnalytics(amplifyOutputs.analytics);\n    }\n    if (amplifyOutputs.geo) {\n        resourcesConfig.Geo = parseGeo(amplifyOutputs.geo);\n    }\n    if (amplifyOutputs.data) {\n        resourcesConfig.API = parseData(amplifyOutputs.data);\n    }\n    if (amplifyOutputs.custom) {\n        const customConfig = parseCustom(amplifyOutputs.custom);\n        if (customConfig && 'Events' in customConfig) {\n            resourcesConfig.API = { ...resourcesConfig.API, ...customConfig };\n        }\n    }\n    if (amplifyOutputs.notifications) {\n        resourcesConfig.Notifications = parseNotifications(amplifyOutputs.notifications);\n    }\n    return resourcesConfig;\n}\nconst authModeNames = {\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AWS_LAMBDA: 'lambda',\n    OPENID_CONNECT: 'oidc',\n};\nfunction getGraphQLAuthMode(authType) {\n    return authModeNames[authType];\n}\nconst providerNames = {\n    GOOGLE: 'Google',\n    LOGIN_WITH_AMAZON: 'Amazon',\n    FACEBOOK: 'Facebook',\n    SIGN_IN_WITH_APPLE: 'Apple',\n};\nfunction getOAuthProviders(providers = []) {\n    return providers.reduce((oAuthProviders, provider) => {\n        if (providerNames[provider] !== undefined) {\n            oAuthProviders.push(providerNames[provider]);\n        }\n        return oAuthProviders;\n    }, []);\n}\nfunction getMfaStatus(mfaConfiguration) {\n    if (mfaConfiguration === 'OPTIONAL')\n        return 'optional';\n    if (mfaConfiguration === 'REQUIRED')\n        return 'on';\n    return 'off';\n}\nfunction createBucketInfoMap(buckets) {\n    const mappedBuckets = {};\n    buckets.forEach(({ name, bucket_name: bucketName, aws_region: region, paths }) => {\n        if (name in mappedBuckets) {\n            throw new Error(`Duplicate friendly name found: ${name}. Name must be unique.`);\n        }\n        const sanitizedPaths = paths\n            ? Object.entries(paths).reduce((acc, [key, value]) => {\n                if (value !== undefined) {\n                    acc[key] = value;\n                }\n                return acc;\n            }, {})\n            : undefined;\n        mappedBuckets[name] = {\n            bucketName,\n            region,\n            paths: sanitizedPaths,\n        };\n    });\n    return mappedBuckets;\n}\n\nexport { isAmplifyOutputs, parseAmplifyOutputs, parseAnalytics };\n//# sourceMappingURL=parseAmplifyOutputs.mjs.map\n","import { parseAWSExports } from '../parseAWSExports.mjs';\nimport { isAmplifyOutputs, parseAmplifyOutputs } from '../parseAmplifyOutputs.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Parses the variety of configuration shapes that Amplify can accept into a ResourcesConfig.\n *\n * @param amplifyConfig An Amplify configuration object conforming to one of the supported schemas.\n * @return A ResourcesConfig for the provided configuration object.\n */\nconst parseAmplifyConfig = (amplifyConfig) => {\n    if (Object.keys(amplifyConfig).some(key => key.startsWith('aws_'))) {\n        return parseAWSExports(amplifyConfig);\n    }\n    else if (isAmplifyOutputs(amplifyConfig)) {\n        return parseAmplifyOutputs(amplifyConfig);\n    }\n    else {\n        return amplifyConfig;\n    }\n};\n\nexport { parseAmplifyConfig };\n//# sourceMappingURL=parseAmplifyConfig.mjs.map\n","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8Browser;\nexport function convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=convertToBuffer.js.map","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar Framework;\n(function (Framework) {\n    // < 100 - Web frameworks\n    Framework[\"WebUnknown\"] = \"0\";\n    Framework[\"React\"] = \"1\";\n    Framework[\"NextJs\"] = \"2\";\n    Framework[\"Angular\"] = \"3\";\n    Framework[\"VueJs\"] = \"4\";\n    Framework[\"Nuxt\"] = \"5\";\n    Framework[\"Svelte\"] = \"6\";\n    // 100s - Server side frameworks\n    Framework[\"ServerSideUnknown\"] = \"100\";\n    Framework[\"ReactSSR\"] = \"101\";\n    Framework[\"NextJsSSR\"] = \"102\";\n    Framework[\"AngularSSR\"] = \"103\";\n    Framework[\"VueJsSSR\"] = \"104\";\n    Framework[\"NuxtSSR\"] = \"105\";\n    Framework[\"SvelteSSR\"] = \"106\";\n    // 200s - Mobile framework\n    Framework[\"ReactNative\"] = \"201\";\n    Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nvar Category;\n(function (Category) {\n    Category[\"AI\"] = \"ai\";\n    Category[\"API\"] = \"api\";\n    Category[\"Auth\"] = \"auth\";\n    Category[\"Analytics\"] = \"analytics\";\n    Category[\"DataStore\"] = \"datastore\";\n    Category[\"Geo\"] = \"geo\";\n    Category[\"InAppMessaging\"] = \"inappmessaging\";\n    Category[\"Interactions\"] = \"interactions\";\n    Category[\"Predictions\"] = \"predictions\";\n    Category[\"PubSub\"] = \"pubsub\";\n    Category[\"PushNotification\"] = \"pushnotification\";\n    Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nvar AiAction;\n(function (AiAction) {\n    AiAction[\"CreateConversation\"] = \"1\";\n    AiAction[\"GetConversation\"] = \"2\";\n    AiAction[\"ListConversations\"] = \"3\";\n    AiAction[\"DeleteConversation\"] = \"4\";\n    AiAction[\"SendMessage\"] = \"5\";\n    AiAction[\"ListMessages\"] = \"6\";\n    AiAction[\"OnMessage\"] = \"7\";\n    AiAction[\"Generation\"] = \"8\";\n    AiAction[\"UpdateConversation\"] = \"9\";\n})(AiAction || (AiAction = {}));\nvar AnalyticsAction;\n(function (AnalyticsAction) {\n    AnalyticsAction[\"Record\"] = \"1\";\n    AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nvar ApiAction;\n(function (ApiAction) {\n    ApiAction[\"GraphQl\"] = \"1\";\n    ApiAction[\"Get\"] = \"2\";\n    ApiAction[\"Post\"] = \"3\";\n    ApiAction[\"Put\"] = \"4\";\n    ApiAction[\"Patch\"] = \"5\";\n    ApiAction[\"Del\"] = \"6\";\n    ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nvar AuthAction;\n(function (AuthAction) {\n    AuthAction[\"SignUp\"] = \"1\";\n    AuthAction[\"ConfirmSignUp\"] = \"2\";\n    AuthAction[\"ResendSignUpCode\"] = \"3\";\n    AuthAction[\"SignIn\"] = \"4\";\n    AuthAction[\"FetchMFAPreference\"] = \"6\";\n    AuthAction[\"UpdateMFAPreference\"] = \"7\";\n    AuthAction[\"SetUpTOTP\"] = \"10\";\n    AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n    AuthAction[\"ConfirmSignIn\"] = \"12\";\n    AuthAction[\"DeleteUserAttributes\"] = \"15\";\n    AuthAction[\"DeleteUser\"] = \"16\";\n    AuthAction[\"UpdateUserAttributes\"] = \"17\";\n    AuthAction[\"FetchUserAttributes\"] = \"18\";\n    AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n    AuthAction[\"SignOut\"] = \"26\";\n    AuthAction[\"UpdatePassword\"] = \"27\";\n    AuthAction[\"ResetPassword\"] = \"28\";\n    AuthAction[\"ConfirmResetPassword\"] = \"29\";\n    AuthAction[\"FederatedSignIn\"] = \"30\";\n    AuthAction[\"RememberDevice\"] = \"32\";\n    AuthAction[\"ForgetDevice\"] = \"33\";\n    AuthAction[\"FetchDevices\"] = \"34\";\n    AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n    AuthAction[\"SignInWithRedirect\"] = \"36\";\n    AuthAction[\"StartWebAuthnRegistration\"] = \"37\";\n    AuthAction[\"CompleteWebAuthnRegistration\"] = \"38\";\n    AuthAction[\"ListWebAuthnCredentials\"] = \"39\";\n    AuthAction[\"DeleteWebAuthnCredential\"] = \"40\";\n})(AuthAction || (AuthAction = {}));\nvar DataStoreAction;\n(function (DataStoreAction) {\n    DataStoreAction[\"Subscribe\"] = \"1\";\n    DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nvar GeoAction;\n(function (GeoAction) {\n    GeoAction[\"SearchByText\"] = \"0\";\n    GeoAction[\"SearchByCoordinates\"] = \"1\";\n    GeoAction[\"SearchForSuggestions\"] = \"2\";\n    GeoAction[\"SearchByPlaceId\"] = \"3\";\n    GeoAction[\"SaveGeofences\"] = \"4\";\n    GeoAction[\"GetGeofence\"] = \"5\";\n    GeoAction[\"ListGeofences\"] = \"6\";\n    GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nvar InAppMessagingAction;\n(function (InAppMessagingAction) {\n    InAppMessagingAction[\"SyncMessages\"] = \"1\";\n    InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n    InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nvar InteractionsAction;\n(function (InteractionsAction) {\n    InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nvar PredictionsAction;\n(function (PredictionsAction) {\n    PredictionsAction[\"Convert\"] = \"1\";\n    PredictionsAction[\"Identify\"] = \"2\";\n    PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nvar PubSubAction;\n(function (PubSubAction) {\n    PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nvar PushNotificationAction;\n(function (PushNotificationAction) {\n    PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n    PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nvar StorageAction;\n(function (StorageAction) {\n    StorageAction[\"UploadData\"] = \"1\";\n    StorageAction[\"DownloadData\"] = \"2\";\n    StorageAction[\"List\"] = \"3\";\n    StorageAction[\"Copy\"] = \"4\";\n    StorageAction[\"Remove\"] = \"5\";\n    StorageAction[\"GetProperties\"] = \"6\";\n    StorageAction[\"GetUrl\"] = \"7\";\n    StorageAction[\"GetDataAccess\"] = \"8\";\n    StorageAction[\"ListCallerAccessGrants\"] = \"9\";\n})(StorageAction || (StorageAction = {}));\n\nexport { AiAction, AnalyticsAction, ApiAction, AuthAction, Category, DataStoreAction, Framework, GeoAction, InAppMessagingAction, InteractionsAction, PredictionsAction, PubSubAction, PushNotificationAction, StorageAction };\n//# sourceMappingURL=types.mjs.map\n","// generated by genversion\nconst version = '6.15.4';\n\nexport { version };\n//# sourceMappingURL=version.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst globalExists = () => {\n    return typeof global !== 'undefined';\n};\nconst globalThisExists = () => {\n    return typeof globalThis !== 'undefined';\n};\nconst windowExists = () => {\n    return typeof window !== 'undefined';\n};\nconst documentExists = () => {\n    return typeof document !== 'undefined';\n};\nconst processExists = () => {\n    return typeof process !== 'undefined';\n};\nconst keyPrefixMatch = (object, prefix) => {\n    return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\n\nexport { documentExists, globalExists, globalThisExists, keyPrefixMatch, processExists, windowExists };\n//# sourceMappingURL=helpers.mjs.map\n","import { documentExists, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react 18.2 - built using Vite\nfunction reactWebDetect() {\n    const elementKeyPrefixedWithReact = (key) => {\n        return key.startsWith('_react') || key.startsWith('__react');\n    };\n    const elementIsReactEnabled = (element) => {\n        return Object.keys(element).find(elementKeyPrefixedWithReact);\n    };\n    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nfunction reactSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('react')));\n}\n// use the some\n\nexport { reactSSRDetect, reactWebDetect };\n//# sourceMappingURL=React.mjs.map\n","import { windowExists, keyPrefixMatch, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with vue 3.3.2\nfunction vueWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__VUE');\n}\nfunction vueSSRDetect() {\n    return globalExists() && keyPrefixMatch(global, '__VUE');\n}\n\nexport { vueSSRDetect, vueWebDetect };\n//# sourceMappingURL=Vue.mjs.map\n","import { windowExists, keyPrefixMatch, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with svelte 3.59\nfunction svelteWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nfunction svelteSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('svelte')));\n}\n\nexport { svelteSSRDetect, svelteWebDetect };\n//# sourceMappingURL=Svelte.mjs.map\n","import { windowExists, globalExists, keyPrefixMatch } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with next 13.4 / react 18.2\nfunction nextWebDetect() {\n    return (windowExists() &&\n        window.next &&\n        typeof window.next === 'object');\n}\nfunction nextSSRDetect() {\n    return (globalExists() &&\n        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n}\n\nexport { nextSSRDetect, nextWebDetect };\n//# sourceMappingURL=Next.mjs.map\n","import { windowExists, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with nuxt 2.15 / vue 2.7\nfunction nuxtWebDetect() {\n    return (windowExists() &&\n        (window.__NUXT__ !== undefined ||\n            window.$nuxt !== undefined));\n}\nfunction nuxtSSRDetect() {\n    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n}\n\nexport { nuxtSSRDetect, nuxtWebDetect };\n//# sourceMappingURL=Nuxt.mjs.map\n","import { documentExists, processExists, windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with @angular/core 16.0.0\nfunction angularWebDetect() {\n    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n    return angularVersionSetInDocument || angularContentSetInWindow;\n}\nfunction angularSSRDetect() {\n    return ((processExists() &&\n        typeof process.env === 'object' &&\n        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n        false);\n}\n\nexport { angularSSRDetect, angularWebDetect };\n//# sourceMappingURL=Angular.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react-native 0.17.7\nfunction reactNativeDetect() {\n    return (typeof navigator !== 'undefined' &&\n        typeof navigator.product !== 'undefined' &&\n        navigator.product === 'ReactNative');\n}\n\nexport { reactNativeDetect };\n//# sourceMappingURL=ReactNative.mjs.map\n","import { globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with expo 48 / react-native 0.71.3\nfunction expoDetect() {\n    return globalExists() && typeof global.expo !== 'undefined';\n}\n\nexport { expoDetect };\n//# sourceMappingURL=Expo.mjs.map\n","import { windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction webDetect() {\n    return windowExists();\n}\n\nexport { webDetect };\n//# sourceMappingURL=Web.mjs.map\n","import { Framework } from '../types.mjs';\nimport { reactWebDetect, reactSSRDetect } from './React.mjs';\nimport { vueWebDetect, vueSSRDetect } from './Vue.mjs';\nimport { svelteWebDetect, svelteSSRDetect } from './Svelte.mjs';\nimport { nextWebDetect, nextSSRDetect } from './Next.mjs';\nimport { nuxtWebDetect, nuxtSSRDetect } from './Nuxt.mjs';\nimport { angularWebDetect, angularSSRDetect } from './Angular.mjs';\nimport { reactNativeDetect } from './ReactNative.mjs';\nimport { expoDetect } from './Expo.mjs';\nimport { webDetect } from './Web.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nfunction detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n\nexport { detect };\n//# sourceMappingURL=index.mjs.map\n","import { Framework } from './types.mjs';\nimport { detect } from './detection/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nconst frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nconst detectFramework = () => {\n    if (!frameworkCache) {\n        frameworkCache = detect();\n        if (resetTriggered) {\n            // The final run of detectFramework:\n            // Starting from this point, the `frameworkCache` becomes \"final\".\n            // So we don't need to notify the observers again so the observer\n            // can be removed after the final notice.\n            while (frameworkChangeObservers.length) {\n                frameworkChangeObservers.pop()?.();\n            }\n        }\n        else {\n            // The first run of detectFramework:\n            // Every time we update the cache, call each observer function\n            frameworkChangeObservers.forEach(fcn => {\n                fcn();\n            });\n        }\n        // Retry once for either Unknown type after a delay (explained below)\n        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n    }\n    return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nconst observeFrameworkChanges = (fcn) => {\n    // When the `frameworkCache` won't be updated again, we ignore all incoming\n    // observers.\n    if (resetTriggered) {\n        return;\n    }\n    frameworkChangeObservers.push(fcn);\n};\nfunction clearCache() {\n    frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n    if (frameworkCache === framework && !resetTriggered) {\n        setTimeout(() => {\n            clearCache();\n            resetTriggered = true;\n            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n        }, delay);\n    }\n}\n\nexport { clearCache, detectFramework, frameworkChangeObservers, observeFrameworkChanges };\n//# sourceMappingURL=detectFramework.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nconst getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n\nexport { getCustomUserAgent, setCustomUserAgent };\n//# sourceMappingURL=customUserAgent.mjs.map\n","import { Framework } from './types.mjs';\nimport { version } from './version.mjs';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework.mjs';\nimport { getCustomUserAgent } from './customUserAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst BASE_USER_AGENT = `aws-amplify`;\n/** Sanitize Amplify version string be removing special character + and character post the special character  */\nconst sanitizeAmplifyVersion = (amplifyVersion) => amplifyVersion.replace(/\\+.*/, '');\nclass PlatformBuilder {\n    constructor() {\n        this.userAgent = `${BASE_USER_AGENT}/${sanitizeAmplifyVersion(version)}`;\n    }\n    get framework() {\n        return detectFramework();\n    }\n    get isReactNative() {\n        return (this.framework === Framework.ReactNative ||\n            this.framework === Framework.Expo);\n    }\n    observeFrameworkChanges(fcn) {\n        observeFrameworkChanges(fcn);\n    }\n}\nconst Platform = new PlatformBuilder();\nconst getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n    const userAgent = [\n        [BASE_USER_AGENT, sanitizeAmplifyVersion(version)],\n    ];\n    if (category) {\n        userAgent.push([category, action]);\n    }\n    userAgent.push(['framework', detectFramework()]);\n    if (category && action) {\n        const customState = getCustomUserAgent(category, action);\n        if (customState) {\n            customState.forEach(state => {\n                userAgent.push(state);\n            });\n        }\n    }\n    return userAgent;\n};\nconst getAmplifyUserAgent = (customUserAgentDetails) => {\n    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n    const userAgentString = userAgent\n        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n        .join(' ');\n    return userAgentString;\n};\n\nexport { Platform, getAmplifyUserAgent, getAmplifyUserAgentObject, sanitizeAmplifyVersion };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\nexport { isBrowser };\n//# sourceMappingURL=isBrowser.mjs.map\n","import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('Auth');\nclass AuthClass {\n    /**\n     * Configure Auth category\n     *\n     * @internal\n     *\n     * @param authResourcesConfig - Resources configurations required by Auth providers.\n     * @param authOptions - Client options used by library\n     *\n     * @returns void\n     */\n    configure(authResourcesConfig, authOptions) {\n        this.authConfig = authResourcesConfig;\n        this.authOptions = authOptions;\n        if (authResourcesConfig && authResourcesConfig.Cognito?.userPoolEndpoint) {\n            logger.warn(getCustomEndpointWarningMessage('Amazon Cognito User Pool'));\n        }\n        if (authResourcesConfig &&\n            authResourcesConfig.Cognito?.identityPoolEndpoint) {\n            logger.warn(getCustomEndpointWarningMessage('Amazon Cognito Identity Pool'));\n        }\n    }\n    /**\n     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n     * will automatically refresh expired auth tokens if a valid refresh token is present. You can force a refresh\n     * of non-expired tokens with `{ forceRefresh: true }` input.\n     *\n     * @param options - Options configuring the fetch behavior.\n     *\n     * @returns Promise of current auth session {@link AuthSession}.\n     */\n    async fetchAuthSession(options = {}) {\n        let credentialsAndIdentityId;\n        let userSub;\n        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n        const tokens = await this.getTokens(options);\n        if (tokens) {\n            userSub = tokens.accessToken?.payload?.sub;\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    tokens,\n                    authenticated: true,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        else {\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    authenticated: false,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        return {\n            tokens,\n            credentials: credentialsAndIdentityId?.credentials,\n            identityId: credentialsAndIdentityId?.identityId,\n            userSub,\n        };\n    }\n    async clearCredentials() {\n        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n    }\n    async getTokens(options) {\n        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n    }\n}\nconst getCustomEndpointWarningMessage = (target) => `You are using a custom Amazon ${target} endpoint, ensure the endpoint is correct.`;\n\nexport { AuthClass };\n//# sourceMappingURL=index.mjs.map\n","import { Hub, AMPLIFY_SYMBOL } from '../Hub/index.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\nimport '../utils/getClientInfo/getClientInfo.mjs';\nimport '../utils/retry/retry.mjs';\nimport { deepFreeze } from '../utils/deepFreeze.mjs';\nimport '../parseAWSExports.mjs';\nimport { ADD_OAUTH_LISTENER } from './constants.mjs';\nimport 'uuid';\nimport { parseAmplifyConfig } from '../utils/parseAmplifyConfig.mjs';\nimport './Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../Platform/index.mjs';\nimport '../Platform/types.mjs';\nimport '../BackgroundProcessManager/types.mjs';\nimport '../Reachability/Reachability.mjs';\nimport '../utils/sessionListener/index.mjs';\nimport { AuthClass } from './Auth/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AmplifyClass {\n    constructor() {\n        this.oAuthListener = undefined;\n        this.isConfigured = false;\n        this.resourcesConfig = {};\n        this.libraryOptions = {};\n        this.Auth = new AuthClass();\n    }\n    /**\n     * Configures Amplify for use with your back-end resources.\n     *\n     * @remarks\n     * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n     * provided values will be used after configuration.\n     *\n     * @remarks\n     * `configure` can be used to specify additional library options where available for supported categories.\n     *\n     * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n     * @param libraryOptions - Additional options for customizing the behavior of the library.\n     */\n    configure(resourcesConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourcesConfig);\n        this.resourcesConfig = resolvedResourceConfig;\n        if (libraryOptions) {\n            this.libraryOptions = libraryOptions;\n        }\n        // Make resource config immutable\n        this.resourcesConfig = deepFreeze(this.resourcesConfig);\n        this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n        Hub.dispatch('core', {\n            event: 'configure',\n            data: this.resourcesConfig,\n        }, 'Configure', AMPLIFY_SYMBOL);\n        this.notifyOAuthListener();\n        this.isConfigured = true;\n    }\n    /**\n     * Provides access to the current back-end resource configuration for the Library.\n     *\n     * @returns Returns the immutable back-end resource configuration.\n     */\n    getConfig() {\n        if (!this.isConfigured) {\n            // eslint-disable-next-line no-console\n            console.warn(`Amplify has not been configured. Please call Amplify.configure() before using this service.`);\n        }\n        return this.resourcesConfig;\n    }\n    /** @internal */\n    [ADD_OAUTH_LISTENER](listener) {\n        if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n            // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n            listener(this.resourcesConfig.Auth?.Cognito);\n        }\n        else {\n            // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n            this.oAuthListener = listener;\n        }\n    }\n    notifyOAuthListener() {\n        if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth ||\n            !this.oAuthListener) {\n            return;\n        }\n        this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n        // the listener should only be notified once with a valid oauth config\n        this.oAuthListener = undefined;\n    }\n}\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` orchestrates cross-category communication within the library.\n */\nconst Amplify = new AmplifyClass();\n\nexport { Amplify, AmplifyClass };\n//# sourceMappingURL=Amplify.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n\nexport { parseMetadata };\n//# sourceMappingURL=responseInfo.mjs.map\n","import { parseMetadata } from './responseInfo.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nconst parseJsonError = async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const body = await parseJsonBody(response);\n    const sanitizeErrorCode = (rawValue) => {\n        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n        if (cleanValue.includes('#')) {\n            return cleanValue.split('#')[1];\n        }\n        return cleanValue;\n    };\n    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n        body.code ??\n        body.__type ??\n        'UnknownError');\n    const message = body.message ?? body.Message ?? 'Unknown error';\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nconst parseJsonBody = async (response) => {\n    if (!response.body) {\n        throw new Error('Missing response payload');\n    }\n    const output = await response.body.json();\n    return Object.assign(output, {\n        $metadata: parseMetadata(response),\n    });\n};\n\nexport { parseJsonBody, parseJsonError };\n//# sourceMappingURL=json.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a service API handler that accepts input as defined shape and responds conforming to defined output shape.\n * A service API handler is composed with:\n * * A transfer handler\n * * A serializer function\n * * A deserializer function\n * * A default config object\n *\n * The returned service API handler, when called, will trigger the following workflow:\n * 1. When calling the service API handler function, the default config object is merged into the input config\n * object to assign the default values of some omitted configs, resulting to a resolved config object.\n * 2. The `endpointResolver` function from the default config object will be invoked with the resolved config object and\n * API input object resulting to an endpoint instance.\n * 3. The serializer function is invoked with API input object and the endpoint instance resulting to an HTTP request\n * instance.\n * 4. The HTTP request instance and the resolved config object is passed to the transfer handler function.\n * 5. The transfer handler function resolves to an HTTP response instance(can be either successful or failed status code).\n * 6. The deserializer function is invoked with the HTTP response instance resulting to the API output object, and\n * return to the caller.\n *\n *\n * @param transferHandler Async function for dispatching HTTP requests and returning HTTP response.\n * @param serializer  Async function for converting object in defined input shape into HTTP request targeting a given\n * \tendpoint.\n * @param deserializer Async function for converting HTTP response into output object in defined output shape, or error\n * \tshape.\n * @param defaultConfig  object containing default options to be consumed by transfer handler, serializer and\n *  deserializer.\n * @returns a async service API handler function that accepts a config object and input object in defined shape, returns\n * \tan output object in defined shape. It may also throw error instance in defined shape in deserializer. The config\n *  object type is composed with options type of transferHandler, endpointResolver function as well as endpointResolver\n *  function's input options type, region string. The config object property will be marked as optional if it's also\n * \tdefined in defaultConfig.\n *\n * @internal\n */\nconst composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n    return async (config, input) => {\n        const resolvedConfig = {\n            ...defaultConfig,\n            ...config,\n        };\n        // We need to allow different endpoints based on both given config(other than region) and input.\n        // However for most of non-S3 services, region is the only input for endpoint resolver.\n        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n        // They will be populated automatically by browser, or node-fetch polyfill.\n        const request = await serializer(input, endpoint);\n        const response = await transferHandler(request, {\n            ...resolvedConfig,\n        });\n        return deserializer(response);\n    };\n};\n\nexport { composeServiceApi };\n//# sourceMappingURL=composeServiceApi.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_DELAY_MS = 5 * 60 * 1000;\n\nexport { MAX_DELAY_MS };\n//# sourceMappingURL=constants.mjs.map\n","import { MAX_DELAY_MS } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @private\n * Internal use of Amplify only\n */\nfunction jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n\nexport { jitteredBackoff };\n//# sourceMappingURL=jitteredBackoff.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_RETRY_ATTEMPTS = 3;\nconst AMZ_SDK_INVOCATION_ID_HEADER = 'amz-sdk-invocation-id';\nconst AMZ_SDK_REQUEST_HEADER = 'amz-sdk-request';\nconst DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\n\nexport { AMZ_SDK_INVOCATION_ID_HEADER, AMZ_SDK_REQUEST_HEADER, DEFAULT_MAX_DELAY_MS, DEFAULT_RETRY_ATTEMPTS };\n//# sourceMappingURL=constants.mjs.map\n","import '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport { jitteredBackoff as jitteredBackoff$1 } from '../../../utils/retry/jitteredBackoff.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport { DEFAULT_MAX_DELAY_MS } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nconst jitteredBackoff = attempt => {\n    const delayFunction = jitteredBackoff$1(DEFAULT_MAX_DELAY_MS);\n    const delay = delayFunction(attempt);\n    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\n\nexport { jitteredBackoff };\n//# sourceMappingURL=jitteredBackoff.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nconst isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n\nexport { isClockSkewError };\n//# sourceMappingURL=isClockSkewError.mjs.map\n","import { AmplifyErrorCode } from '../../../types/errors.mjs';\nimport { isClockSkewError } from './isClockSkewError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nconst getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code || parsedError?.name;\n    const statusCode = response?.statusCode;\n    const isRetryable = isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode);\n    return {\n        retryable: isRetryable,\n    };\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => [\n    AmplifyErrorCode.NetworkError,\n    // TODO(vNext): unify the error code `ERR_NETWORK` used by the Storage XHR handler\n    'ERR_NETWORK',\n].includes(error?.name);\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n\nexport { getRetryDecider };\n//# sourceMappingURL=defaultRetryDecider.mjs.map\n","import '../../../../types/errors.mjs';\nimport '../../../../errors/errorHelpers.mjs';\nimport { jitteredBackoff } from '../../../../clients/middleware/retry/jitteredBackoff.mjs';\nimport { getRetryDecider } from '../../../../clients/middleware/retry/defaultRetryDecider.mjs';\nimport '../../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../../utils/retry/retry.mjs';\nimport '../../../../parseAWSExports.mjs';\nimport 'uuid';\nimport '../../../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../../../Platform/index.mjs';\nimport '../../../../Platform/types.mjs';\nimport '../../../../BackgroundProcessManager/types.mjs';\nimport '../../../../Reachability/Reachability.mjs';\nimport '../../../../Hub/index.mjs';\nimport '../../../../utils/sessionListener/index.mjs';\nimport { parseJsonError } from '../../../../clients/serde/json.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst COGNITO_IDENTITY_SERVICE_NAME = 'cognito-identity';\nconst DEFAULT_SERVICE_CLIENT_API_CONFIG = {\n    service: COGNITO_IDENTITY_SERVICE_NAME,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    cache: 'no-store',\n};\n\nexport { COGNITO_IDENTITY_SERVICE_NAME, DEFAULT_SERVICE_CLIENT_API_CONFIG };\n//# sourceMappingURL=constants.mjs.map\n","import { DEFAULT_RETRY_ATTEMPTS } from './constants.mjs';\n\n/**\n * Middleware that executes the retry logic.\n */\nconst retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? (context.attemptsCount ?? 0)\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            const { isCredentialsExpiredError, retryable } = await retryDecider(response, error, context);\n            if (retryable) {\n                // Setting isCredentialsInvalid flag to notify signing middleware to forceRefresh credentials provider.\n                context.isCredentialsExpired = !!isCredentialsExpiredError;\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n\nexport { retryMiddlewareFactory };\n//# sourceMappingURL=retryMiddleware.mjs.map\n","import { v4 } from 'uuid';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst amplifyUuid = v4;\n\nexport { amplifyUuid };\n//# sourceMappingURL=index.mjs.map\n","import '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport '../../../parseAWSExports.mjs';\nimport { amplifyUuid } from '../../../utils/amplifyUuid/index.mjs';\nimport '../../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../../Platform/index.mjs';\nimport '../../../Platform/types.mjs';\nimport '../../../BackgroundProcessManager/types.mjs';\nimport '../../../Reachability/Reachability.mjs';\nimport '../../../Hub/index.mjs';\nimport '../../../utils/sessionListener/index.mjs';\nimport { AMZ_SDK_INVOCATION_ID_HEADER } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects a UUID string to `amz-sdk-invocation-id` header.\n * if the header is not set already. This header is helpful to provide\n * observability to group the requests caused by automatic retry.\n *\n * This middleware is standalone because of extra UUID dependency, we will\n * NOT use this middleware for API categories.\n *\n * Ref: https://sdk.amazonaws.com/kotlin/api/smithy-kotlin/api/1.0.9/http-client/aws.smithy.kotlin.runtime.http.operation/-http-operation-context/-sdk-invocation-id.html\n */\nconst amzSdkInvocationIdHeaderMiddlewareFactory = () => next => {\n    return async function amzSdkInvocationIdHeaderMiddleware(request) {\n        if (!request.headers[AMZ_SDK_INVOCATION_ID_HEADER]) {\n            request.headers[AMZ_SDK_INVOCATION_ID_HEADER] = amplifyUuid();\n        }\n        return next(request);\n    };\n};\n\nexport { amzSdkInvocationIdHeaderMiddlewareFactory };\n//# sourceMappingURL=amzSdkInvocationIdHeaderMiddleware.mjs.map\n","import { DEFAULT_RETRY_ATTEMPTS, AMZ_SDK_REQUEST_HEADER } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects `amz-sdk-request` header to indicate the retry state at the time an HTTP request is made.\n * This middleware should co-exist with retryMiddleware as it relies on the retryAttempts value in middleware context\n * set by the retry middleware.\n *\n * Example header: `amz-sdk-request: attempt=1; max=3`.\n *\n * This middleware is standalone because of extra headers may conflict with custom endpoint settings(e.g. CORS), we will\n * NOT use this middleware for API categories.\n */\nconst amzSdkRequestHeaderMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS }) => (next, context) => {\n    return async function amzSdkRequestHeaderMiddleware(request) {\n        const attemptsCount = context.attemptsCount ?? 0;\n        request.headers[AMZ_SDK_REQUEST_HEADER] =\n            `attempt=${attemptsCount + 1}; max=${maxAttempts}`;\n        return next(request);\n    };\n};\n\nexport { amzSdkRequestHeaderMiddlewareFactory };\n//# sourceMappingURL=amzSdkRequestHeaderMiddleware.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nconst userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n\nexport { userAgentMiddlewareFactory };\n//# sourceMappingURL=middleware.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nconst composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n\nexport { composeTransferHandler };\n//# sourceMappingURL=composeTransferHandler.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nconst withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n\nexport { withMemoization };\n//# sourceMappingURL=memoization.mjs.map\n","import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport { AmplifyErrorCode } from '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\nimport { withMemoization } from '../utils/memoization.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst shouldSendBody = (method) => !['HEAD', 'GET'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nconst fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        if (e instanceof TypeError) {\n            throw new AmplifyError({\n                name: AmplifyErrorCode.NetworkError,\n                message: 'A network error has occurred.',\n                underlyingError: e,\n            });\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: withMemoization(() => resp.text()),\n        blob: withMemoization(() => resp.blob()),\n        json: withMemoization(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\n\nexport { fetchTransferHandler };\n//# sourceMappingURL=fetch.mjs.map\n","import { retryMiddlewareFactory } from '../../middleware/retry/retryMiddleware.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport { amzSdkInvocationIdHeaderMiddlewareFactory } from '../../middleware/retry/amzSdkInvocationIdHeaderMiddleware.mjs';\nimport { amzSdkRequestHeaderMiddlewareFactory } from '../../middleware/retry/amzSdkRequestHeaderMiddleware.mjs';\nimport { userAgentMiddlewareFactory } from '../../middleware/userAgent/middleware.mjs';\nimport { composeTransferHandler } from '../../internal/composeTransferHandler.mjs';\nimport { fetchTransferHandler } from '../fetch.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [\n    userAgentMiddlewareFactory,\n    amzSdkInvocationIdHeaderMiddlewareFactory,\n    retryMiddlewareFactory,\n    amzSdkRequestHeaderMiddlewareFactory,\n]);\n\nexport { unauthenticatedHandler };\n//# sourceMappingURL=unauthenticated.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst createDisableCacheMiddleware = () => next => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n\nexport { createDisableCacheMiddleware };\n//# sourceMappingURL=createDisableCacheMiddleware.mjs.map\n","import '../../../../../types/errors.mjs';\nimport '../../../../../errors/errorHelpers.mjs';\nimport { unauthenticatedHandler } from '../../../../../clients/handlers/aws/unauthenticated.mjs';\nimport '../../../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../../../utils/retry/retry.mjs';\nimport '../../../../../parseAWSExports.mjs';\nimport 'uuid';\nimport '../../../../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../../../../Platform/index.mjs';\nimport '../../../../../Platform/types.mjs';\nimport '../../../../../BackgroundProcessManager/types.mjs';\nimport '../../../../../Reachability/Reachability.mjs';\nimport '../../../../../Hub/index.mjs';\nimport '../../../../../utils/sessionListener/index.mjs';\nimport { composeTransferHandler } from '../../../../../clients/internal/composeTransferHandler.mjs';\nimport { createDisableCacheMiddleware } from '../../../middleware/createDisableCacheMiddleware.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [createDisableCacheMiddleware]);\n\nexport { cognitoIdentityTransferHandler };\n//# sourceMappingURL=cognitoIdentityTransferHandler.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createClientSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityService.${operation}`,\n});\nconst buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n\nexport { buildHttpRpcRequest, createClientSerializer };\n//# sourceMappingURL=createClientSerializer.mjs.map\n","import '../../../../types/errors.mjs';\nimport '../../../../errors/errorHelpers.mjs';\nimport '../../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../../utils/retry/retry.mjs';\nimport '../../../../parseAWSExports.mjs';\nimport 'uuid';\nimport '../../../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { getAmplifyUserAgent } from '../../../../Platform/index.mjs';\nimport '../../../../Platform/types.mjs';\nimport '../../../../BackgroundProcessManager/types.mjs';\nimport '../../../../Reachability/Reachability.mjs';\nimport '../../../../Hub/index.mjs';\nimport '../../../../utils/sessionListener/index.mjs';\nimport { parseMetadata } from '../../../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../../../clients/serde/json.mjs';\nimport { composeServiceApi } from '../../../../clients/internal/composeServiceApi.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\nimport { cognitoIdentityTransferHandler } from './handler/cognitoIdentityTransferHandler.mjs';\nimport { createClientSerializer } from './serde/createClientSerializer.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGetCredentialsForIdentityClient = (config) => composeServiceApi(cognitoIdentityTransferHandler, createClientSerializer('GetCredentialsForIdentity'), getCredentialsForIdentityDeserializer, {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n    userAgentValue: getAmplifyUserAgent(),\n});\nconst getCredentialsForIdentityDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    const body = await parseJsonBody(response);\n    return {\n        IdentityId: body.IdentityId,\n        Credentials: deserializeCredentials(body.Credentials),\n        $metadata: parseMetadata(response),\n    };\n};\nconst deserializeCredentials = ({ Expiration, ...rest } = {}) => ({\n    ...rest,\n    Expiration: Expiration && new Date(Expiration * 1000),\n});\n\nexport { createGetCredentialsForIdentityClient };\n//# sourceMappingURL=createGetCredentialsForIdentityClient.mjs.map\n","import '../../../../types/errors.mjs';\nimport '../../../../errors/errorHelpers.mjs';\nimport '../../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../../utils/retry/retry.mjs';\nimport '../../../../parseAWSExports.mjs';\nimport 'uuid';\nimport '../../../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { getAmplifyUserAgent } from '../../../../Platform/index.mjs';\nimport '../../../../Platform/types.mjs';\nimport '../../../../BackgroundProcessManager/types.mjs';\nimport '../../../../Reachability/Reachability.mjs';\nimport '../../../../Hub/index.mjs';\nimport '../../../../utils/sessionListener/index.mjs';\nimport { parseMetadata } from '../../../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../../../clients/serde/json.mjs';\nimport { composeServiceApi } from '../../../../clients/internal/composeServiceApi.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\nimport { cognitoIdentityTransferHandler } from './handler/cognitoIdentityTransferHandler.mjs';\nimport { createClientSerializer } from './serde/createClientSerializer.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGetIdClient = (config) => composeServiceApi(cognitoIdentityTransferHandler, createClientSerializer('GetId'), getIdDeserializer, {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n    userAgentValue: getAmplifyUserAgent(),\n});\nconst getIdDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    const body = await parseJsonBody(response);\n    return {\n        IdentityId: body.IdentityId,\n        $metadata: parseMetadata(response),\n    };\n};\n\nexport { createGetIdClient };\n//# sourceMappingURL=createGetIdClient.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nconst defaultPartition = {\n    id: 'aws',\n    outputs: {\n        dnsSuffix: 'amazonaws.com',\n    },\n    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-global'],\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nconst partitionsInfo = {\n    partitions: [\n        defaultPartition,\n        {\n            id: 'aws-cn',\n            outputs: {\n                dnsSuffix: 'amazonaws.com.cn',\n            },\n            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n            regions: ['aws-cn-global'],\n        },\n    ],\n};\n\nexport { defaultPartition, partitionsInfo };\n//# sourceMappingURL=partitions.mjs.map\n","import { partitionsInfo, defaultPartition } from './partitions.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nconst getDnsSuffix = (region) => {\n    const { partitions } = partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return defaultPartition.outputs.dnsSuffix;\n};\n\nexport { getDnsSuffix };\n//# sourceMappingURL=getDnsSuffix.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\n\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n//# sourceMappingURL=index.mjs.map\n","import { getDnsSuffix } from '../../../../clients/endpoints/getDnsSuffix.mjs';\nimport '../../../../types/errors.mjs';\nimport '../../../../errors/errorHelpers.mjs';\nimport '../../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../../utils/retry/retry.mjs';\nimport '../../../../parseAWSExports.mjs';\nimport 'uuid';\nimport { AmplifyUrl } from '../../../../utils/amplifyUrl/index.mjs';\nimport '../../../../singleton/Auth/utils/errorHelpers.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../../../Platform/index.mjs';\nimport '../../../../Platform/types.mjs';\nimport '../../../../BackgroundProcessManager/types.mjs';\nimport '../../../../Reachability/Reachability.mjs';\nimport '../../../../Hub/index.mjs';\nimport '../../../../utils/sessionListener/index.mjs';\nimport { COGNITO_IDENTITY_SERVICE_NAME } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst cognitoIdentityPoolEndpointResolver = ({ region, }) => ({\n    url: new AmplifyUrl(`https://${COGNITO_IDENTITY_SERVICE_NAME}.${region}.${getDnsSuffix(region)}`),\n});\n\nexport { cognitoIdentityPoolEndpointResolver };\n//# sourceMappingURL=cognitoIdentityPoolEndpointResolver.mjs.map\n","import { AmplifyErrorCode } from '../types/errors.mjs';\nimport { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass PlatformNotSupportedError extends AmplifyError {\n    constructor() {\n        super({\n            name: AmplifyErrorCode.PlatformNotSupported,\n            message: 'Function not supported on current platform',\n        });\n    }\n}\n\nexport { PlatformNotSupportedError };\n//# sourceMappingURL=PlatformNotSupportedError.mjs.map\n","import { PlatformNotSupportedError } from '../errors/PlatformNotSupportedError.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass KeyValueStorage {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    async setItem(key, value) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    async getItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    async removeItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    async clear() {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.clear();\n    }\n}\n\nexport { KeyValueStorage };\n//# sourceMappingURL=KeyValueStorage.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass InMemoryStorage {\n    constructor() {\n        this.storage = new Map();\n    }\n    get length() {\n        return this.storage.size;\n    }\n    key(index) {\n        if (index > this.length - 1) {\n            return null;\n        }\n        return Array.from(this.storage.keys())[index];\n    }\n    setItem(key, value) {\n        this.storage.set(key, value);\n    }\n    getItem(key) {\n        return this.storage.get(key) ?? null;\n    }\n    removeItem(key) {\n        this.storage.delete(key);\n    }\n    clear() {\n        this.storage.clear();\n    }\n}\n\nexport { InMemoryStorage };\n//# sourceMappingURL=InMemoryStorage.mjs.map\n","import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { InMemoryStorage } from './InMemoryStorage.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nconst logger = new ConsoleLogger('CoreStorageUtils');\nconst getLocalStorageWithFallback = () => {\n    try {\n        // Attempt to use localStorage directly\n        if (typeof window !== 'undefined' && window.localStorage) {\n            return window.localStorage;\n        }\n    }\n    catch (e) {\n        // Handle any errors related to localStorage access\n        logger.info('localStorage not found. InMemoryStorage is used as a fallback.');\n    }\n    // Return in-memory storage as a fallback if localStorage is not accessible\n    return new InMemoryStorage();\n};\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nconst getSessionStorageWithFallback = () => {\n    try {\n        // Attempt to use sessionStorage directly\n        if (typeof window !== 'undefined' && window.sessionStorage) {\n            // Verify we can actually use it by testing access\n            window.sessionStorage.getItem('test');\n            return window.sessionStorage;\n        }\n        throw new Error('sessionStorage is not defined');\n    }\n    catch (e) {\n        // Handle any errors related to sessionStorage access\n        logger.info('sessionStorage not found. InMemoryStorage is used as a fallback.');\n        return new InMemoryStorage();\n    }\n};\n\nexport { getLocalStorageWithFallback, getSessionStorageWithFallback };\n//# sourceMappingURL=utils.mjs.map\n","import { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { getLocalStorageWithFallback } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass DefaultStorage extends KeyValueStorage {\n    constructor() {\n        super(getLocalStorageWithFallback());\n    }\n}\n\nexport { DefaultStorage };\n//# sourceMappingURL=DefaultStorage.mjs.map\n","import { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { getSessionStorageWithFallback } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass SessionStorage extends KeyValueStorage {\n    constructor() {\n        super(getSessionStorageWithFallback());\n    }\n}\n\nexport { SessionStorage };\n//# sourceMappingURL=SessionStorage.mjs.map\n","import { PlatformNotSupportedError } from '../errors/PlatformNotSupportedError.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass SyncKeyValueStorage {\n    constructor(storage) {\n        this._storage = storage;\n    }\n    get storage() {\n        if (!this._storage)\n            throw new PlatformNotSupportedError();\n        return this._storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    setItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    getItem(key) {\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    removeItem(key) {\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    clear() {\n        this.storage.clear();\n    }\n}\n\nexport { SyncKeyValueStorage };\n//# sourceMappingURL=SyncKeyValueStorage.mjs.map\n","import { SyncKeyValueStorage } from './SyncKeyValueStorage.mjs';\nimport { getSessionStorageWithFallback } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass SyncSessionStorage extends SyncKeyValueStorage {\n    constructor() {\n        super(getSessionStorageWithFallback());\n    }\n}\n\nexport { SyncSessionStorage };\n//# sourceMappingURL=SyncSessionStorage.mjs.map\n","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","import JsCookie from 'js-cookie';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass CookieStorage {\n    constructor(data = {}) {\n        const { path, domain, expires, sameSite, secure } = data;\n        this.domain = domain;\n        this.path = path || '/';\n        this.expires = Object.prototype.hasOwnProperty.call(data, 'expires')\n            ? expires\n            : 365;\n        this.secure = Object.prototype.hasOwnProperty.call(data, 'secure')\n            ? secure\n            : true;\n        if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n            if (!sameSite || !['strict', 'lax', 'none'].includes(sameSite)) {\n                throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n            }\n            if (sameSite === 'none' && !this.secure) {\n                throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n            }\n            this.sameSite = sameSite;\n        }\n    }\n    async setItem(key, value) {\n        JsCookie.set(key, value, this.getData());\n    }\n    async getItem(key) {\n        const item = JsCookie.get(key);\n        return item ?? null;\n    }\n    async removeItem(key) {\n        JsCookie.remove(key, this.getData());\n    }\n    async clear() {\n        const cookie = JsCookie.get();\n        const promises = Object.keys(cookie).map(key => this.removeItem(key));\n        await Promise.all(promises);\n    }\n    getData() {\n        return {\n            path: this.path,\n            expires: this.expires,\n            domain: this.domain,\n            secure: this.secure,\n            ...(this.sameSite && { sameSite: this.sameSite }),\n        };\n    }\n}\n\nexport { CookieStorage };\n//# sourceMappingURL=CookieStorage.mjs.map\n","import { DefaultStorage } from './DefaultStorage.mjs';\nimport { InMemoryStorage } from './InMemoryStorage.mjs';\nimport { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { SessionStorage } from './SessionStorage.mjs';\nimport { SyncSessionStorage } from './SyncSessionStorage.mjs';\nexport { CookieStorage } from './CookieStorage.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst defaultStorage = new DefaultStorage();\nconst sessionStorage = new SessionStorage();\nconst syncSessionStorage = new SyncSessionStorage();\nconst sharedInMemoryStorage = new KeyValueStorage(new InMemoryStorage());\n\nexport { defaultStorage, sessionStorage, sharedInMemoryStorage, syncSessionStorage };\n//# sourceMappingURL=index.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nconst deDupeAsyncFunction = (asyncFunction) => {\n    let inflightPromise;\n    return async (...args) => {\n        if (inflightPromise)\n            return inflightPromise;\n        inflightPromise = new Promise((resolve, reject) => {\n            asyncFunction(...args)\n                .then(result => {\n                resolve(result);\n            })\n                .catch(error => {\n                reject(error);\n            })\n                .finally(() => {\n                inflightPromise = undefined;\n            });\n        });\n        return inflightPromise;\n    };\n};\n\nexport { deDupeAsyncFunction };\n//# sourceMappingURL=deDupeAsyncFunction.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTokenExpired({ expiresAt, clockDrift, tolerance = 5000, }) {\n    const currentTime = Date.now();\n    return currentTime + clockDrift + tolerance > expiresAt;\n}\n\nexport { isTokenExpired };\n//# sourceMappingURL=isTokenExpired.mjs.map\n","import { AmplifyError } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AuthError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n    }\n}\n\nexport { AuthError };\n//# sourceMappingURL=AuthError.mjs.map\n","import { AuthError } from '../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getRegionFromUserPoolId(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nfunction getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n\nexport { getRegionFromIdentityPoolId, getRegionFromUserPoolId };\n//# sourceMappingURL=regionParsers.mjs.map\n","import { AuthError } from './AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nconst USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nconst DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nconst AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nconst INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nconst INVALID_APP_SCHEME_EXCEPTION = 'InvalidAppSchemeException';\nconst INVALID_PREFERRED_REDIRECT_EXCEPTION = 'InvalidPreferredRedirectUrlException';\nconst invalidRedirectException = new AuthError({\n    name: INVALID_REDIRECT_EXCEPTION,\n    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n});\nconst invalidAppSchemeException = new AuthError({\n    name: INVALID_APP_SCHEME_EXCEPTION,\n    message: 'A valid non-http app scheme was not found in the config.',\n    recoverySuggestion: 'Please make sure a valid custom app scheme is present in the config.',\n});\nconst invalidPreferredRedirectUrlException = new AuthError({\n    name: INVALID_PREFERRED_REDIRECT_EXCEPTION,\n    message: 'The given preferredRedirectUrl does not match any items in the redirectSignOutUrls array from the config.',\n    recoverySuggestion: 'Please make sure a matching preferredRedirectUrl is provided.',\n});\nconst INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nconst invalidOriginException = new AuthError({\n    name: INVALID_ORIGIN_EXCEPTION,\n    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n});\nconst OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nconst TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nconst UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n\nexport { AUTO_SIGN_IN_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION, INVALID_APP_SCHEME_EXCEPTION, INVALID_ORIGIN_EXCEPTION, INVALID_PREFERRED_REDIRECT_EXCEPTION, INVALID_REDIRECT_EXCEPTION, OAUTH_SIGNOUT_EXCEPTION, TOKEN_REFRESH_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_ALREADY_AUTHENTICATED_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, invalidAppSchemeException, invalidOriginException, invalidPreferredRedirectUrlException, invalidRedirectException };\n//# sourceMappingURL=constants.mjs.map\n","import { AuthError } from '../../../errors/AuthError.mjs';\nimport { TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nfunction assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nfunction assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nconst oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nconst tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nfunction assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nfunction assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nconst OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n\nexport { OAuthStorageKeys, assertAuthTokens, assertAuthTokensWithRefreshToken, assertDeviceMetadata, assertIdTokenInAuthTokens, isTypeUserPoolConfig, oAuthTokenRefreshException, tokenRefreshException };\n//# sourceMappingURL=types.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\nconst buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n\nexport { createUserPoolSerializer };\n//# sourceMappingURL=createUserPoolSerializer.mjs.map\n","import { AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertServiceError(error) {\n    if (!error ||\n        error.name === 'Error' ||\n        error instanceof TypeError) {\n        throw new AuthError({\n            name: AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: error,\n        });\n    }\n}\n\nexport { assertServiceError };\n//# sourceMappingURL=assertServiceError.mjs.map\n","import { parseJsonError, parseJsonBody } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUserPoolDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        throw new AuthError({\n            name: error.name,\n            message: error.message,\n            metadata: error.$metadata,\n        });\n    }\n    return parseJsonBody(response);\n};\n\nexport { createUserPoolDeserializer };\n//# sourceMappingURL=createUserPoolDeserializer.mjs.map\n","import { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { unauthenticatedHandler } from '@aws-amplify/core/internals/aws-client-utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => (next, _) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n\nexport { cognitoUserPoolTransferHandler };\n//# sourceMappingURL=cognitoUserPoolTransferHandler.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst COGNITO_IDP_SERVICE_NAME = 'cognito-idp';\n\nexport { COGNITO_IDP_SERVICE_NAME };\n//# sourceMappingURL=constants.mjs.map\n","import { getRetryDecider, parseJsonError, jitteredBackoff } from '@aws-amplify/core/internals/aws-client-utils';\nimport { getAmplifyUserAgent } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from '../../../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_SERVICE_CLIENT_API_CONFIG = {\n    service: COGNITO_IDP_SERVICE_NAME,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    get userAgentValue() {\n        return getAmplifyUserAgent();\n    },\n    cache: 'no-store',\n};\n\nexport { DEFAULT_SERVICE_CLIENT_API_CONFIG };\n//# sourceMappingURL=constants.mjs.map\n","import { getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { COGNITO_IDP_SERVICE_NAME } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst cognitoUserPoolEndpointResolver = ({ region, }) => ({\n    url: new AmplifyUrl(`https://${COGNITO_IDP_SERVICE_NAME}.${region}.${getDnsSuffix(region)}`),\n});\n\nexport { cognitoUserPoolEndpointResolver };\n//# sourceMappingURL=cognitoUserPoolEndpointResolver.mjs.map\n","import { AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolEndpointResolver } from '../../../foundation/cognitoUserPoolEndpointResolver.mjs';\n\nconst createCognitoUserPoolEndpointResolver = ({ endpointOverride }) => (input) => {\n    if (endpointOverride) {\n        return { url: new AmplifyUrl(endpointOverride) };\n    }\n    return cognitoUserPoolEndpointResolver(input);\n};\n\nexport { createCognitoUserPoolEndpointResolver };\n//# sourceMappingURL=createCognitoUserPoolEndpointResolver.mjs.map\n","import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { createUserPoolDeserializer } from './shared/serde/createUserPoolDeserializer.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createGetTokensFromRefreshTokenClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('GetTokensFromRefreshToken'), createUserPoolDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n\nexport { createGetTokensFromRefreshTokenClient };\n//# sourceMappingURL=createGetTokensFromRefreshTokenClient.mjs.map\n","import { deDupeAsyncFunction, assertTokenProviderConfig, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokensWithRefreshToken } from './types.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\nimport '@aws-amplify/core';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport { createGetTokensFromRefreshTokenClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetTokensFromRefreshTokenClient.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const { userPoolId, userPoolClientId, userPoolEndpoint } = authConfig.Cognito;\n    const region = getRegionFromUserPoolId(userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const getTokensFromRefreshToken = createGetTokensFromRefreshTokenClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { AuthenticationResult } = await getTokensFromRefreshToken({ region }, {\n        ClientId: userPoolClientId,\n        RefreshToken: tokens.refreshToken,\n        DeviceKey: tokens.deviceMetadata?.deviceKey,\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken\n        ? decodeJWT(AuthenticationResult.IdToken)\n        : undefined;\n    const { iat } = accessToken.payload;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n        throw new AuthError({\n            name: 'iatNotFoundException',\n            message: 'iat not found in access token',\n        });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n        accessToken,\n        idToken,\n        clockDrift,\n        refreshToken: AuthenticationResult?.RefreshToken ?? tokens.refreshToken,\n        username,\n    };\n};\nconst refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\nconst refreshAuthTokensWithoutDedupe = refreshAuthTokensFunction;\n\nexport { refreshAuthTokens, refreshAuthTokensWithoutDedupe };\n//# sourceMappingURL=refreshAuthTokens.mjs.map\n","const AuthTokenStorageKeys = {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    oidcProvider: 'oidcProvider',\n    clockDrift: 'clockDrift',\n    refreshToken: 'refreshToken',\n    deviceKey: 'deviceKey',\n    randomPasswordKey: 'randomPasswordKey',\n    deviceGroupKey: 'deviceGroupKey',\n    signInDetails: 'signInDetails',\n    oauthMetadata: 'oauthMetadata',\n};\n\nexport { AuthTokenStorageKeys };\n//# sourceMappingURL=types.mjs.map\n","import { createAssertionFunction } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n    TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n    [TokenProviderErrorCode.InvalidAuthTokens]: {\n        message: 'Invalid tokens.',\n        recoverySuggestion: 'Make sure the tokens are valid.',\n    },\n};\nconst assert = createAssertionFunction(tokenValidationErrorMap);\n\nexport { TokenProviderErrorCode, assert };\n//# sourceMappingURL=errorHelpers.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AUTH_KEY_PREFIX = 'CognitoIdentityServiceProvider';\n\nexport { AUTH_KEY_PREFIX };\n//# sourceMappingURL=constants.mjs.map\n","import { decodeJWT, assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { AuthTokenStorageKeys } from './types.mjs';\nimport { assert, TokenProviderErrorCode } from './errorHelpers.mjs';\nimport { AUTH_KEY_PREFIX } from './constants.mjs';\n\nclass DefaultTokenStore {\n    getKeyValueStorage() {\n        if (!this.keyValueStorage) {\n            throw new AuthError({\n                name: 'KeyValueStorageNotFoundException',\n                message: 'KeyValueStorage was not found in TokenStore',\n            });\n        }\n        return this.keyValueStorage;\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    async loadTokens() {\n        // TODO(v6): migration logic should be here\n        // Reading V5 tokens old format\n        try {\n            const authKeys = await this.getAuthKeys();\n            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n            if (!accessTokenString) {\n                throw new AuthError({\n                    name: 'NoSessionFoundException',\n                    message: 'Auth session was not found. Make sure to call signIn.',\n                });\n            }\n            const accessToken = decodeJWT(accessTokenString);\n            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n            const idToken = itString ? decodeJWT(itString) : undefined;\n            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n                undefined;\n            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n            const clockDrift = Number.parseInt(clockDriftString);\n            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n            const tokens = {\n                accessToken,\n                idToken,\n                refreshToken,\n                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n                clockDrift,\n                username: await this.getLastAuthUser(),\n            };\n            if (signInDetails) {\n                tokens.signInDetails = JSON.parse(signInDetails);\n            }\n            return tokens;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    async storeTokens(tokens) {\n        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n        const lastAuthUser = tokens.username;\n        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n        const authKeys = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n        if (tokens.idToken) {\n            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.idToken);\n        }\n        if (tokens.refreshToken) {\n            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.refreshToken);\n        }\n        if (tokens.deviceMetadata) {\n            if (tokens.deviceMetadata.deviceKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n            }\n            if (tokens.deviceMetadata.deviceGroupKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n            }\n            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n        }\n        if (tokens.signInDetails) {\n            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n        }\n        else {\n            await this.getKeyValueStorage().removeItem(authKeys.signInDetails);\n        }\n        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n    }\n    async clearTokens() {\n        const authKeys = await this.getAuthKeys();\n        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n            this.getKeyValueStorage().removeItem(authKeys.idToken),\n            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n            this.getKeyValueStorage().removeItem(authKeys.oauthMetadata),\n        ]);\n    }\n    async getDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n        return randomPassword && deviceGroupKey && deviceKey\n            ? {\n                deviceKey,\n                deviceGroupKey,\n                randomPassword,\n            }\n            : null;\n    }\n    async clearDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n        ]);\n    }\n    async getAuthKeys(username) {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const lastAuthUser = username ?? (await this.getLastAuthUser());\n        return createKeysForAuthStorage(AUTH_KEY_PREFIX, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n    }\n    getLastAuthUserKey() {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const identifier = this.authConfig.Cognito.userPoolClientId;\n        return `${AUTH_KEY_PREFIX}.${identifier}.LastAuthUser`;\n    }\n    async getLastAuthUser() {\n        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n            'username';\n        return lastAuthUser;\n    }\n    async setOAuthMetadata(metadata) {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(oauthMetadataKey, JSON.stringify(metadata));\n    }\n    async getOAuthMetadata() {\n        const { oauthMetadata: oauthMetadataKey } = await this.getAuthKeys();\n        const oauthMetadata = await this.getKeyValueStorage().getItem(oauthMetadataKey);\n        return oauthMetadata && JSON.parse(oauthMetadata);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nfunction getAuthStorageKeys(authKeys) {\n    const keys = Object.values({ ...authKeys });\n    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n        ...acc,\n        [authKey]: `${prefix}.${identifier}.${authKey}`,\n    }), {});\n}\n\nexport { DefaultTokenStore, createKeysForAuthStorage, getAuthStorageKeys };\n//# sourceMappingURL=TokenStore.mjs.map\n","import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\nimport { OAuthStorageKeys } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nclass DefaultOAuthStore {\n    constructor(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    async clearOAuthInflightData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await Promise.all([\n            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n            this.keyValueStorage.removeItem(authKeys.oauthState),\n        ]);\n    }\n    async clearOAuthData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.clearOAuthInflightData();\n        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n    }\n    loadOAuthState() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthState);\n    }\n    storeOAuthState(state) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n    }\n    loadPKCE() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n    }\n    storePKCE(pkce) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n    }\n    setAuthConfig(authConfigParam) {\n        this.cognitoConfig = authConfigParam;\n    }\n    async loadOAuthInFlight() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n    }\n    async storeOAuthInFlight(inflight) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n    }\n    async loadOAuthSignIn() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n            [];\n        return {\n            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n            preferPrivateSession: preferPrivateSession === 'true',\n        };\n    }\n    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\n\nexport { DefaultOAuthStore };\n//# sourceMappingURL=signInWithRedirectStore.mjs.map\n","import { defaultStorage } from '@aws-amplify/core';\nimport { DefaultOAuthStore } from '../signInWithRedirectStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst oAuthStore = new DefaultOAuthStore(defaultStorage);\n\nexport { oAuthStore };\n//# sourceMappingURL=oAuthStore.mjs.map\n","import { Hub } from '@aws-amplify/core';\nimport { isBrowser, assertTokenProviderConfig, isTokenExpired, AMPLIFY_SYMBOL, AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { oAuthStore } from '../utils/oauth/oAuthStore.mjs';\nimport { addInflightPromise } from '../utils/oauth/inflightPromise.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass TokenOrchestrator {\n    constructor() {\n        this.waitForInflightOAuth = isBrowser()\n            ? async () => {\n                if (!(await oAuthStore.loadOAuthInFlight())) {\n                    return;\n                }\n                if (this.inflightPromise) {\n                    return this.inflightPromise;\n                }\n                // when there is valid oauth config and there is an inflight oauth flow, try\n                // to block async calls that require fetching tokens before the oauth flow completes\n                // e.g. getCurrentUser, fetchAuthSession etc.\n                this.inflightPromise = new Promise((resolve, _reject) => {\n                    addInflightPromise(resolve);\n                });\n                return this.inflightPromise;\n            }\n            : async () => {\n                // no-op for non-browser environments\n            };\n    }\n    setAuthConfig(authConfig) {\n        oAuthStore.setAuthConfig(authConfig.Cognito);\n        this.authConfig = authConfig;\n    }\n    setTokenRefresher(tokenRefresher) {\n        this.tokenRefresher = tokenRefresher;\n    }\n    setAuthTokenStore(tokenStore) {\n        this.tokenStore = tokenStore;\n    }\n    getTokenStore() {\n        if (!this.tokenStore) {\n            throw new AuthError({\n                name: 'EmptyTokenStoreException',\n                message: 'TokenStore not set',\n            });\n        }\n        return this.tokenStore;\n    }\n    getTokenRefresher() {\n        if (!this.tokenRefresher) {\n            throw new AuthError({\n                name: 'EmptyTokenRefresherException',\n                message: 'TokenRefresher not set',\n            });\n        }\n        return this.tokenRefresher;\n    }\n    async getTokens(options) {\n        let tokens;\n        try {\n            assertTokenProviderConfig(this.authConfig?.Cognito);\n        }\n        catch (_err) {\n            // Token provider not configured\n            return null;\n        }\n        await this.waitForInflightOAuth();\n        this.inflightPromise = undefined;\n        tokens = await this.getTokenStore().loadTokens();\n        const username = await this.getTokenStore().getLastAuthUser();\n        if (tokens === null) {\n            return null;\n        }\n        const idTokenExpired = !!tokens?.idToken &&\n            isTokenExpired({\n                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n                clockDrift: tokens.clockDrift ?? 0,\n            });\n        const accessTokenExpired = isTokenExpired({\n            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n            clockDrift: tokens.clockDrift ?? 0,\n        });\n        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n            tokens = await this.refreshTokens({\n                tokens,\n                username,\n            });\n            if (tokens === null) {\n                return null;\n            }\n        }\n        return {\n            accessToken: tokens?.accessToken,\n            idToken: tokens?.idToken,\n            signInDetails: tokens?.signInDetails,\n        };\n    }\n    async refreshTokens({ tokens, username, }) {\n        try {\n            const { signInDetails } = tokens;\n            const newTokens = await this.getTokenRefresher()({\n                tokens,\n                authConfig: this.authConfig,\n                username,\n            });\n            newTokens.signInDetails = signInDetails;\n            await this.setTokens({ tokens: newTokens });\n            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n            return newTokens;\n        }\n        catch (err) {\n            return this.handleErrors(err);\n        }\n    }\n    handleErrors(err) {\n        assertServiceError(err);\n        if (err.name !== AmplifyErrorCode.NetworkError) {\n            // TODO(v6): Check errors on client\n            this.clearTokens();\n        }\n        Hub.dispatch('auth', {\n            event: 'tokenRefresh_failure',\n            data: { error: err },\n        }, 'Auth', AMPLIFY_SYMBOL);\n        if (err.name.startsWith('NotAuthorizedException')) {\n            return null;\n        }\n        throw err;\n    }\n    async setTokens({ tokens }) {\n        return this.getTokenStore().storeTokens(tokens);\n    }\n    async clearTokens() {\n        return this.getTokenStore().clearTokens();\n    }\n    getDeviceMetadata(username) {\n        return this.getTokenStore().getDeviceMetadata(username);\n    }\n    clearDeviceMetadata(username) {\n        return this.getTokenStore().clearDeviceMetadata(username);\n    }\n    setOAuthMetadata(metadata) {\n        return this.getTokenStore().setOAuthMetadata(metadata);\n    }\n    getOAuthMetadata() {\n        return this.getTokenStore().getOAuthMetadata();\n    }\n}\n\nexport { TokenOrchestrator };\n//# sourceMappingURL=TokenOrchestrator.mjs.map\n","import { defaultStorage } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens.mjs';\nimport { DefaultTokenStore } from './TokenStore.mjs';\nimport { TokenOrchestrator } from './TokenOrchestrator.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n\nexport { CognitoUserPoolsTokenProvider };\n//# sourceMappingURL=CognitoUserPoolsTokenProvider.mjs.map\n","import { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nconst cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nconst { tokenOrchestrator } = cognitoUserPoolsTokenProvider;\n\nexport { cognitoUserPoolsTokenProvider, tokenOrchestrator };\n//# sourceMappingURL=tokenProvider.mjs.map\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst IdentityIdStorageKeys = {\n    identityId: 'identityId',\n};\n\nexport { IdentityIdStorageKeys };\n//# sourceMappingURL=types.mjs.map\n","import { ConsoleLogger } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\nimport { IdentityIdStorageKeys } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('DefaultIdentityIdStore');\nclass DefaultIdentityIdStore {\n    setAuthConfig(authConfigParam) {\n        assertIdentityPoolIdConfig(authConfigParam.Cognito);\n        this.authConfig = authConfigParam;\n        this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n    }\n    constructor(keyValueStorage) {\n        this._authKeys = {};\n        this._hasGuestIdentityId = false;\n        this.keyValueStorage = keyValueStorage;\n    }\n    async loadIdentityId() {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        try {\n            if (this._primaryIdentityId) {\n                return {\n                    id: this._primaryIdentityId,\n                    type: 'primary',\n                };\n            }\n            else {\n                const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n                if (storedIdentityId) {\n                    this._hasGuestIdentityId = true;\n                    return {\n                        id: storedIdentityId,\n                        type: 'guest',\n                    };\n                }\n                return null;\n            }\n        }\n        catch (err) {\n            logger.log('Error getting stored IdentityId.', err);\n            return null;\n        }\n    }\n    async storeIdentityId(identity) {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        if (identity.type === 'guest') {\n            this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n            // Clear in-memory storage of primary identityId\n            this._primaryIdentityId = undefined;\n            this._hasGuestIdentityId = true;\n        }\n        else {\n            this._primaryIdentityId = identity.id;\n            // Clear locally stored guest id\n            if (this._hasGuestIdentityId) {\n                this.keyValueStorage.removeItem(this._authKeys.identityId);\n                this._hasGuestIdentityId = false;\n            }\n        }\n    }\n    async clearIdentityId() {\n        this._primaryIdentityId = undefined;\n        await this.keyValueStorage.removeItem(this._authKeys.identityId);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n};\n\nexport { DefaultIdentityIdStore };\n//# sourceMappingURL=IdentityIdStore.mjs.map\n","import { cognitoIdentityPoolEndpointResolver } from '@aws-amplify/core';\nimport { AmplifyUrl } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createCognitoIdentityPoolEndpointResolver = ({ endpointOverride }) => (input) => {\n    if (endpointOverride) {\n        return { url: new AmplifyUrl(endpointOverride) };\n    }\n    return cognitoIdentityPoolEndpointResolver(input);\n};\n\nexport { createCognitoIdentityPoolEndpointResolver };\n//# sourceMappingURL=createCognitoIdentityPoolEndpointResolver.mjs.map\n","import { decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction formLoginsMap(idToken) {\n    const issuer = decodeJWT(idToken).payload.iss;\n    const res = {};\n    if (!issuer) {\n        throw new AuthError({\n            name: 'InvalidIdTokenException',\n            message: 'Invalid Idtoken.',\n        });\n    }\n    const domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n    res[domainName] = idToken;\n    return res;\n}\n\nexport { formLoginsMap };\n//# sourceMappingURL=utils.mjs.map\n","import { createGetIdClient } from '@aws-amplify/core';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport '@aws-amplify/core/internals/utils';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport { createCognitoIdentityPoolEndpointResolver } from '../factories/createCognitoIdentityPoolEndpointResolver.mjs';\nimport { formLoginsMap } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Provides a Cognito identityId\n *\n * @param tokens - The AuthTokens received after SignIn\n * @returns string\n * @throws configuration exceptions: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service exceptions: {@link GetIdException }\n */\nasync function cognitoIdentityIdProvider({ tokens, authConfig, identityIdStore, }) {\n    identityIdStore.setAuthConfig({ Cognito: authConfig });\n    // will return null only if there is no identityId cached or if there is an error retrieving it\n    const identityId = await identityIdStore.loadIdentityId();\n    if (identityId) {\n        return identityId.id;\n    }\n    const logins = tokens?.idToken\n        ? formLoginsMap(tokens.idToken.toString())\n        : {};\n    const generatedIdentityId = await generateIdentityId(logins, authConfig);\n    // Store generated identityId\n    identityIdStore.storeIdentityId({\n        id: generatedIdentityId,\n        type: tokens ? 'primary' : 'guest',\n    });\n    return generatedIdentityId;\n}\nasync function generateIdentityId(logins, authConfig) {\n    const identityPoolId = authConfig?.identityPoolId;\n    const region = getRegionFromIdentityPoolId(identityPoolId);\n    const getId = createGetIdClient({\n        endpointResolver: createCognitoIdentityPoolEndpointResolver({\n            endpointOverride: authConfig.identityPoolEndpoint,\n        }),\n    });\n    // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n    let idResult;\n    // for a first-time user, this will return a brand new identity\n    // for a returning user, this will retrieve the previous identity assocaited with the logins\n    try {\n        idResult = (await getId({\n            region,\n        }, {\n            IdentityPoolId: identityPoolId,\n            Logins: logins,\n        })).IdentityId;\n    }\n    catch (e) {\n        assertServiceError(e);\n        throw new AuthError(e);\n    }\n    if (!idResult) {\n        throw new AuthError({\n            name: 'GetIdResponseException',\n            message: 'Received undefined response from getId operation',\n            recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.',\n        });\n    }\n    return idResult;\n}\n\nexport { cognitoIdentityIdProvider };\n//# sourceMappingURL=IdentityIdProvider.mjs.map\n","import { ConsoleLogger, createGetCredentialsForIdentityClient } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { getRegionFromIdentityPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertIdTokenInAuthTokens } from '../utils/types.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport { createCognitoIdentityPoolEndpointResolver } from '../factories/createCognitoIdentityPoolEndpointResolver.mjs';\nimport { cognitoIdentityIdProvider } from './IdentityIdProvider.mjs';\nimport { formLoginsMap } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('CognitoCredentialsProvider');\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nclass CognitoAWSCredentialsAndIdentityIdProvider {\n    constructor(identityIdStore) {\n        this._nextCredentialsRefresh = 0;\n        this._identityIdStore = identityIdStore;\n    }\n    async clearCredentialsAndIdentityId() {\n        logger.debug('Clearing out credentials and identityId');\n        this._credentialsAndIdentityId = undefined;\n        await this._identityIdStore.clearIdentityId();\n    }\n    async clearCredentials() {\n        logger.debug('Clearing out in-memory credentials');\n        this._credentialsAndIdentityId = undefined;\n    }\n    async getCredentialsAndIdentityId(getCredentialsOptions) {\n        const isAuthenticated = getCredentialsOptions.authenticated;\n        const { tokens } = getCredentialsOptions;\n        const { authConfig } = getCredentialsOptions;\n        try {\n            assertIdentityPoolIdConfig(authConfig?.Cognito);\n        }\n        catch {\n            // No identity pool configured, skipping\n            return;\n        }\n        if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n            // TODO(V6): return partial result like Native platforms\n            return;\n        }\n        const { forceRefresh } = getCredentialsOptions;\n        const tokenHasChanged = this.hasTokenChanged(tokens);\n        const identityId = await cognitoIdentityIdProvider({\n            tokens,\n            authConfig: authConfig.Cognito,\n            identityIdStore: this._identityIdStore,\n        });\n        // Clear cached credentials when forceRefresh is true OR the cache token has changed\n        if (forceRefresh || tokenHasChanged) {\n            this.clearCredentials();\n        }\n        if (!isAuthenticated) {\n            return this.getGuestCredentials(identityId, authConfig.Cognito);\n        }\n        else {\n            assertIdTokenInAuthTokens(tokens);\n            return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n        }\n    }\n    async getGuestCredentials(identityId, authConfig) {\n        // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n            logger.info('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any authenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        const getCredentialsForIdentity = createGetCredentialsForIdentityClient({\n            endpointResolver: createCognitoIdentityPoolEndpointResolver({\n                endpointOverride: authConfig.identityPoolEndpoint,\n            }),\n        });\n        // use identityId to obtain guest credentials\n        // save credentials in-memory\n        // No logins params should be passed for guest creds:\n        // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n        let clientResult;\n        try {\n            clientResult = await getCredentialsForIdentity({ region }, {\n                IdentityId: identityId,\n            });\n        }\n        catch (e) {\n            assertServiceError(e);\n            throw new AuthError(e);\n        }\n        if (clientResult?.Credentials?.AccessKeyId &&\n            clientResult?.Credentials?.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            if (clientResult.IdentityId) {\n                res.identityId = clientResult.IdentityId;\n                this._identityIdStore.storeIdentityId({\n                    id: clientResult.IdentityId,\n                    type: 'guest',\n                });\n            }\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: false,\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsNotFoundException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    async credsForOIDCTokens(authConfig, authTokens, identityId) {\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n            logger.debug('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const logins = authTokens.idToken\n            ? formLoginsMap(authTokens.idToken.toString())\n            : {};\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        const getCredentialsForIdentity = createGetCredentialsForIdentityClient({\n            endpointResolver: createCognitoIdentityPoolEndpointResolver({\n                endpointOverride: authConfig.identityPoolEndpoint,\n            }),\n        });\n        let clientResult;\n        try {\n            clientResult = await getCredentialsForIdentity({ region }, {\n                IdentityId: identityId,\n                Logins: logins,\n            });\n        }\n        catch (e) {\n            assertServiceError(e);\n            throw new AuthError(e);\n        }\n        if (clientResult?.Credentials?.AccessKeyId &&\n            clientResult?.Credentials?.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            if (clientResult.IdentityId) {\n                res.identityId = clientResult.IdentityId;\n                // note: the following call removes guest identityId from the persistent store (localStorage)\n                this._identityIdStore.storeIdentityId({\n                    id: clientResult.IdentityId,\n                    type: 'primary',\n                });\n            }\n            // Store the credentials in-memory along with the expiration\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: true,\n                associatedIdToken: authTokens.idToken?.toString(),\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    isPastTTL() {\n        return this._nextCredentialsRefresh === undefined\n            ? true\n            : this._nextCredentialsRefresh <= Date.now();\n    }\n    hasTokenChanged(tokens) {\n        return (!!tokens &&\n            !!this._credentialsAndIdentityId?.associatedIdToken &&\n            tokens.idToken?.toString() !==\n                this._credentialsAndIdentityId.associatedIdToken);\n    }\n}\n\nexport { CognitoAWSCredentialsAndIdentityIdProvider };\n//# sourceMappingURL=credentialsProvider.mjs.map\n","import { defaultStorage } from '@aws-amplify/core';\nimport { DefaultIdentityIdStore } from './IdentityIdStore.mjs';\nimport { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cognito specific implmentation of the CredentialsProvider interface\n * that manages setting and getting of AWS Credentials.\n *\n * @throws configuration expections: `InvalidIdentityPoolIdException`\n *  - Auth errors that may arise from misconfiguration.\n * @throws service expections: {@link GetCredentialsForIdentityException}, {@link GetIdException}\n *\n */\nconst cognitoCredentialsProvider = new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(defaultStorage));\n\nexport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore, cognitoCredentialsProvider };\n//# sourceMappingURL=index.mjs.map\n","import { Amplify, CookieStorage, defaultStorage } from '@aws-amplify/core';\nimport { parseAmplifyConfig } from '@aws-amplify/core/internals/utils';\nimport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore, cognitoCredentialsProvider, cognitoUserPoolsTokenProvider } from '@aws-amplify/auth/cognito';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DefaultAmplify = {\n    /**\n     * Configures Amplify with the {@link resourceConfig} and {@link libraryOptions}.\n     *\n     * @param resourceConfig The {@link ResourcesConfig} object that is typically imported from the\n     * `amplifyconfiguration.json` file. It can also be an object literal created inline when calling `Amplify.configure`.\n     * @param libraryOptions The {@link LibraryOptions} additional options for the library.\n     *\n     * @example\n     * import config from './amplifyconfiguration.json';\n     *\n     * Amplify.configure(config);\n     */\n    configure(resourceConfig, libraryOptions) {\n        const resolvedResourceConfig = parseAmplifyConfig(resourceConfig);\n        const cookieBasedKeyValueStorage = new CookieStorage({ sameSite: 'lax' });\n        const resolvedKeyValueStorage = libraryOptions?.ssr\n            ? cookieBasedKeyValueStorage\n            : defaultStorage;\n        const resolvedCredentialsProvider = libraryOptions?.ssr\n            ? new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(cookieBasedKeyValueStorage))\n            : cognitoCredentialsProvider;\n        // If no Auth config is provided, no special handling will be required, configure as is.\n        // Otherwise, we can assume an Auth config is provided from here on.\n        if (!resolvedResourceConfig.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If Auth options are provided, always just configure as is.\n        // Otherwise, we can assume no Auth libraryOptions were provided from here on.\n        if (libraryOptions?.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If no Auth libraryOptions were previously configured, then always add default providers.\n        if (!Amplify.libraryOptions.Auth) {\n            cognitoUserPoolsTokenProvider.setAuthConfig(resolvedResourceConfig.Auth);\n            cognitoUserPoolsTokenProvider.setKeyValueStorage(\n            // TODO: allow configure with a public interface\n            resolvedKeyValueStorage);\n            Amplify.configure(resolvedResourceConfig, {\n                ...libraryOptions,\n                Auth: {\n                    tokenProvider: cognitoUserPoolsTokenProvider,\n                    credentialsProvider: resolvedCredentialsProvider,\n                },\n            });\n            return;\n        }\n        // At this point, Auth libraryOptions would have been previously configured and no overriding\n        // Auth options were given, so we should preserve the currently configured Auth libraryOptions.\n        if (libraryOptions) {\n            const authLibraryOptions = Amplify.libraryOptions.Auth;\n            // If ssr is provided through libraryOptions, we should respect the intentional reconfiguration.\n            if (libraryOptions.ssr !== undefined) {\n                cognitoUserPoolsTokenProvider.setKeyValueStorage(\n                // TODO: allow configure with a public interface\n                resolvedKeyValueStorage);\n                authLibraryOptions.credentialsProvider = resolvedCredentialsProvider;\n            }\n            Amplify.configure(resolvedResourceConfig, {\n                Auth: authLibraryOptions,\n                ...libraryOptions,\n            });\n            return;\n        }\n        // Finally, if there were no libraryOptions given at all, we should simply not touch the currently\n        // configured libraryOptions.\n        Amplify.configure(resolvedResourceConfig);\n    },\n    /**\n     * Returns the {@link ResourcesConfig} object passed in as the `resourceConfig` parameter when calling\n     * `Amplify.configure`.\n     *\n     * @returns An {@link ResourcesConfig} object.\n     */\n    getConfig() {\n        return Amplify.getConfig();\n    },\n};\n\nexport { DefaultAmplify };\n//# sourceMappingURL=initSingleton.mjs.map\n"],"names":["AWS_CLOUDWATCH_CATEGORY","NO_HUBCALLBACK_PROVIDED_EXCEPTION","LogType","LOG_LEVELS","ConsoleLogger","name","level","n","dt","config","type","msg","loggerLevelName","loggerLevel","log","prefix","message","obj","plugin","logEvent","pluggable","AmplifyError","recoverySuggestion","underlyingError","metadata","extendedRequestId","httpStatusCode","requestId","AmplifyErrorCode","createAssertionFunction","errorMap","AssertionError","assertion","additionalContext","AMPLIFY_SYMBOL","logger","HubClass","channel","listener","holder","callback","payload","source","ampSymbol","capsule","e","listenerName","cb","Hub","getAtob","base64Decoder","input","options","inputStr","AuthConfigurationErrorCode","authConfigurationErrorMap","assert","assertTokenProviderConfig","cognitoConfig","assertionValid","assertIdentityPoolIdConfig","validConfig","decodeJWT","token","tokenParts","base64","jsonStr","char","deepFreeze","object","propNames","value","authTypeMapping","parseAWSExports","_a","_b","_c","_d","_e","_f","aws_appsync_apiKey","aws_appsync_authenticationType","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_bots_config","aws_cognito_identity_pool_id","aws_cognito_sign_up_verification_method","aws_cognito_mfa_configuration","aws_cognito_mfa_types","aws_cognito_password_protection_settings","aws_cognito_verification_mechanisms","aws_cognito_signup_attributes","aws_cognito_social_providers","aws_cognito_username_attributes","aws_mandatory_sign_in","aws_mobile_analytics_app_id","aws_mobile_analytics_app_region","aws_user_files_s3_bucket","aws_user_files_s3_bucket_region","aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing","aws_user_pools_id","aws_user_pools_web_client_id","geo","oauth","predictions","aws_cloud_logic_custom","Notifications","modelIntrospection","amplifyConfig","InAppMessaging","Push","appId","region","bot","defaultAuthMode","mfaConfig","passwordFormatConfig","userAttributes","attributes","key","loginWithEmailEnabled","loginWithPhoneEnabled","hasOAuthConfig","hasSocialProviderConfig","getOAuthConfig","parseSocialProviders","amazon_location_service","acc","api","endpoint","service","voiceId","getRedirectUrl","redirectStr","domain","scope","redirectSignIn","redirectSignOut","responseType","provider","updatedProvider","ADD_OAUTH_LISTENER","byteToHex","i","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","buf","rnds","isAmplifyOutputs","version","parseStorage","amplifyOutputsStorageProperties","bucket_name","aws_region","buckets","createBucketInfoMap","parseAuth","amplifyOutputsAuthProperties","user_pool_id","user_pool_client_id","identity_pool_id","password_policy","mfa_configuration","mfa_methods","unauthenticated_identities_enabled","username_attributes","standard_required_attributes","groups","authConfig","getMfaStatus","getOAuthProviders","curr","parseAnalytics","amplifyOutputsAnalyticsProperties","amazon_pinpoint","parseGeo","geofence_collections","maps","search_indices","parseData","amplifyOutputsDataProperties","default_authorization_type","url","api_key","model_introspection","getGraphQLAuthMode","parseCustom","amplifyOutputsCustomProperties","parseNotifications","amplifyOutputsNotificationsProperties","channels","amazon_pinpoint_app_id","hasInAppMessaging","hasPushNotification","notificationsConfig","parseAmplifyOutputs","amplifyOutputs","resourcesConfig","customConfig","authModeNames","authType","providerNames","providers","oAuthProviders","mfaConfiguration","mappedBuckets","bucketName","paths","sanitizedPaths","parseAmplifyConfig","fromUtf8","encodedByte","Framework","Category","AiAction","AnalyticsAction","ApiAction","AuthAction","DataStoreAction","GeoAction","InAppMessagingAction","InteractionsAction","PredictionsAction","PubSubAction","PushNotificationAction","StorageAction","globalExists","windowExists","documentExists","processExists","keyPrefixMatch","reactWebDetect","elementKeyPrefixedWithReact","elementIsReactEnabled","element","allElementsWithId","reactSSRDetect","define_process_env_default","vueWebDetect","vueSSRDetect","svelteWebDetect","svelteSSRDetect","nextWebDetect","nextSSRDetect","nuxtWebDetect","nuxtSSRDetect","angularWebDetect","angularVersionSetInDocument","angularContentSetInWindow","angularSSRDetect","reactNativeDetect","expoDetect","webDetect","detectionMap","detect","detectionEntry","frameworkCache","frameworkChangeObservers","resetTriggered","SSR_RESET_TIMEOUT","WEB_RESET_TIMEOUT","PRIME_FRAMEWORK_DELAY","detectFramework","fcn","resetTimeout","clearCache","framework","delay","customUserAgentState","getCustomUserAgent","category","BASE_USER_AGENT","sanitizeAmplifyVersion","amplifyVersion","getAmplifyUserAgentObject","action","userAgent","customState","state","getAmplifyUserAgent","customUserAgentDetails","agentKey","agentValue","isBrowser","AuthClass","authResourcesConfig","authOptions","getCustomEndpointWarningMessage","credentialsAndIdentityId","userSub","tokens","target","AmplifyClass","libraryOptions","resolvedResourceConfig","Amplify","parseMetadata","response","headers","statusCode","isMetadataBearer","parseJsonError","body","parseJsonBody","code","rawValue","cleanValue","error","output","composeServiceApi","transferHandler","serializer","deserializer","defaultConfig","resolvedConfig","request","MAX_DELAY_MS","jitteredBackoff","maxDelayMs","attempt","DEFAULT_RETRY_ATTEMPTS","AMZ_SDK_INVOCATION_ID_HEADER","AMZ_SDK_REQUEST_HEADER","DEFAULT_MAX_DELAY_MS","jitteredBackoff$1","CLOCK_SKEW_ERROR_CODES","isClockSkewError","errorCode","getRetryDecider","errorParser","parsedError","isConnectionError","isThrottlingError","isServerSideError","THROTTLING_ERROR_CODES","TIMEOUT_ERROR_CODES","COGNITO_IDENTITY_SERVICE_NAME","DEFAULT_SERVICE_CLIENT_API_CONFIG","retryMiddlewareFactory","maxAttempts","retryDecider","computeDelay","abortSignal","next","context","attemptsCount","handleTerminalErrorOrResponse","addOrIncrementMetadataAttempts","isCredentialsExpiredError","retryable","cancellableSleep","timeoutMs","timeoutId","sleepPromiseResolveFn","sleepPromise","resolve","cancelSleep","_","nextHandlerOutput","attempts","amplifyUuid","amzSdkInvocationIdHeaderMiddlewareFactory","amzSdkRequestHeaderMiddlewareFactory","userAgentMiddlewareFactory","userAgentHeader","userAgentValue","headerName","composeTransferHandler","coreHandler","middleware","composedHandler","composeHandlerRequest","m","withMemoization","payloadAccessor","cached","shouldSendBody","method","fetchTransferHandler","cache","withCrossDomainCredentials","resp","responseHeaders","httpResponse","bodyWithMixin","unauthenticatedHandler","createDisableCacheMiddleware","cognitoIdentityTransferHandler","createClientSerializer","operation","getSharedHeaders","buildHttpRpcRequest","createGetCredentialsForIdentityClient","getCredentialsForIdentityDeserializer","deserializeCredentials","Expiration","rest","createGetIdClient","getIdDeserializer","defaultPartition","partitionsInfo","getDnsSuffix","partitions","regions","outputs","regionRegex","regex","AmplifyUrl","cognitoIdentityPoolEndpointResolver","PlatformNotSupportedError","KeyValueStorage","storage","InMemoryStorage","index","getLocalStorageWithFallback","getSessionStorageWithFallback","DefaultStorage","SessionStorage","SyncKeyValueStorage","SyncSessionStorage","assign","defaultConverter","init","converter","defaultAttributes","set","stringifiedAttributes","attributeName","get","cookies","jar","parts","found","CookieStorage","data","path","expires","sameSite","secure","JsCookie","cookie","promises","defaultStorage","deDupeAsyncFunction","asyncFunction","inflightPromise","args","reject","result","isTokenExpired","expiresAt","clockDrift","tolerance","AuthError","params","getRegionFromUserPoolId","userPoolId","getRegionFromIdentityPoolId","identityPoolId","USER_UNAUTHENTICATED_EXCEPTION","INVALID_REDIRECT_EXCEPTION","INVALID_APP_SCHEME_EXCEPTION","INVALID_PREFERRED_REDIRECT_EXCEPTION","INVALID_ORIGIN_EXCEPTION","TOKEN_REFRESH_EXCEPTION","assertIdTokenInAuthTokens","oAuthTokenRefreshException","tokenRefreshException","assertAuthTokensWithRefreshToken","isAuthenticatedWithImplicitOauthFlow","isAuthenticatedWithRefreshToken","OAuthStorageKeys","isAuthenticated","createUserPoolSerializer","assertServiceError","createUserPoolDeserializer","disableCacheMiddlewareFactory","cognitoUserPoolTransferHandler","COGNITO_IDP_SERVICE_NAME","cognitoUserPoolEndpointResolver","createCognitoUserPoolEndpointResolver","endpointOverride","createGetTokensFromRefreshTokenClient","refreshAuthTokensFunction","username","userPoolClientId","userPoolEndpoint","getTokensFromRefreshToken","AuthenticationResult","accessToken","idToken","iat","refreshAuthTokens","AuthTokenStorageKeys","TokenProviderErrorCode","tokenValidationErrorMap","AUTH_KEY_PREFIX","DefaultTokenStore","keyValueStorage","authKeys","accessTokenString","itString","refreshToken","clockDriftString","signInDetails","lastAuthUser","deviceKey","deviceGroupKey","randomPassword","createKeysForAuthStorage","identifier","oauthMetadataKey","oauthMetadata","getAuthStorageKeys","keys","authKey","V5_HOSTED_UI_KEY","DefaultOAuthStore","pkce","authConfigParam","inflight","isLegacyHostedUISignIn","isOAuthSignIn","preferPrivateSession","oauthSignIn","oAuthStore","TokenOrchestrator","_reject","tokenRefresher","tokenStore","idTokenExpired","accessTokenExpired","newTokens","err","CognitoUserPoolsTokenProvider","forceRefresh","cognitoUserPoolsTokenProvider","tokenOrchestrator","IdentityIdStorageKeys","DefaultIdentityIdStore","storedIdentityId","identity","createCognitoIdentityPoolEndpointResolver","formLoginsMap","issuer","res","domainName","cognitoIdentityIdProvider","identityIdStore","identityId","logins","generatedIdentityId","generateIdentityId","getId","idResult","CREDENTIALS_TTL","CognitoAWSCredentialsAndIdentityIdProvider","getCredentialsOptions","tokenHasChanged","getCredentialsForIdentity","clientResult","authTokens","cognitoCredentialsProvider","DefaultAmplify","resourceConfig","cookieBasedKeyValueStorage","resolvedKeyValueStorage","resolvedCredentialsProvider","authLibraryOptions"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113]}